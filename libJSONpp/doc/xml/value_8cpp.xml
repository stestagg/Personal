<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.5">
  <compounddef id="value_8cpp" kind="file">
    <compoundname>value.cpp</compoundname>
    <includes refid="value_8h" local="yes">value.h</includes>
    <includes refid="convert_8h" local="yes">convert.h</includes>
    <incdepgraph>
      <node id="150">
        <label>k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/value.cpp</label>
        <link refid="value.cpp"/>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>string</label>
      </node>
      <node id="157">
        <label>map</label>
      </node>
      <node id="151">
        <label>value.h</label>
        <link refid="value_8h"/>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
      </node>
      <node id="152">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="156">
        <label>stdcontainers.h</label>
        <link refid="stdcontainers_8h"/>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
      <node id="159">
        <label>convert.h</label>
        <link refid="convert_8h"/>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>string.h</label>
      </node>
      <node id="153">
        <label>types.h</label>
        <link refid="types_8h"/>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="158">
        <label>vector</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="value_8cpp_1ea9c6bfd76e30dca8043d3aca32af73c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void replace_all</definition>
        <argsstring>(astr &amp;srcstr, const achar *search, const achar *replace)</argsstring>
        <name>replace_all</name>
        <param>
          <type><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref> &amp;</type>
          <declname>srcstr</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref> *</type>
          <declname>replace</declname>
        </param>
        <briefdescription>
<para>Replace all occurrences of <computeroutput>search</computeroutput> with <computeroutput>replace</computeroutput> in <computeroutput>srcstr</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>srcstr</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the std::string or std::wstring that is to be operated on.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>search</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to search for</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>replace</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to replace matches with.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing. <computeroutput>srcstr</computeroutput> is modified directly. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/value.cpp" line="29" bodyfile="k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/value.cpp" bodystart="29" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="value_8cpp_1e3d202062f43e891db15706b6bdf5b78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void quotestring</definition>
        <argsstring>(astr &amp;thestr)</argsstring>
        <name>quotestring</name>
        <param>
          <type><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref> &amp;</type>
          <declname>thestr</declname>
        </param>
        <briefdescription>
<para>Makes <computeroutput>thestr</computeroutput> safe for output as a JSON string, by enquoting dangerous characters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thestr</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the std::string or std::wstring that is to be operated on.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing. <computeroutput>thestr</computeroutput> is modified directly. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/value.cpp" line="50" bodyfile="k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/value.cpp" bodystart="50" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="value_8cpp_17cabca3f524cd580b70324035ad17860" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arraygetstring</definition>
        <argsstring>(astr &amp;thestr, raw_array_t &amp;theval, bool enquote=false, bool separate=false)</argsstring>
        <name>arraygetstring</name>
        <param>
          <type><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref> &amp;</type>
          <declname>thestr</declname>
        </param>
        <param>
          <type><ref refid="stdcontainers_8h_14fe8a3fd31df9699d616664bad4be235" kindref="member">raw_array_t</ref> &amp;</type>
          <declname>theval</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enquote</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>separate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Iterates over the members of an array, formatting them for output. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thestr</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a std::string or std::wstring that will have the output appended to it.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enquote</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, strings and names will be enquoted before output. This is neccesary to output correct JSON</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>separate</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, will output each value on a separate line</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theval</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the raw_array_t that will be converted to string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing. <computeroutput>thestr</computeroutput> is modified directly. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/value.cpp" line="81" bodyfile="k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/value.cpp" bodystart="81" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="value_8cpp_1f2b61253061b87f15801266ac22f0d14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void objectgetstring</definition>
        <argsstring>(astr &amp;thestr, raw_object_t &amp;theval, bool enquote, bool separate)</argsstring>
        <name>objectgetstring</name>
        <param>
          <type><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref> &amp;</type>
          <declname>thestr</declname>
        </param>
        <param>
          <type><ref refid="stdcontainers_8h_1ce1309c9afaba2cf388b9425b3d3ef1a" kindref="member">raw_object_t</ref> &amp;</type>
          <declname>theval</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enquote</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>separate</declname>
        </param>
        <briefdescription>
<para>Iterates over the members of an object, formatting them for output. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thestr</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a std::string or std::wstring that will have the output appended to it.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enquote</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, strings and names will be enquoted before output. This is neccesary to output correct JSON</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>separate</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, will output each value on a separate line</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theval</parametername>
</parameternamelist>
<parameterdescription>
<para>The raw_object_t to be converted to string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing. <computeroutput>thestr</computeroutput> is modified directly. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/value.cpp" line="117" bodyfile="k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/value.cpp" bodystart="117" bodyend="136"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="value_8h" kindref="compound">value.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="convert_8h" kindref="compound">convert.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">JSON;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>value::nullval;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>utility<sp/>functions</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="29"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="value_8cpp_1ea9c6bfd76e30dca8043d3aca32af73c" kindref="member" tooltip="Replace all occurrences of search with replace in srcstr.">replace_all</ref>(<ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>&amp;srcstr,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref><sp/>*search,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref><sp/>*replace){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>searchlen=<ref refid="types_8h_1364f6ab3ccc51f240b299f6e9d84016c" kindref="member">astrlen</ref>(search);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>replacelen=<ref refid="types_8h_1364f6ab3ccc51f240b299f6e9d84016c" kindref="member">astrlen</ref>(replace);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>fnd=0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>schstart=0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((fnd=srcstr.find(search,schstart))!=std::basic_string&lt;achar&gt;::npos){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcstr.replace(fnd,searchlen,replace);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schstart=fnd+replacelen;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="value_8cpp_1e3d202062f43e891db15706b6bdf5b78" kindref="member" tooltip="Makes thestr safe for output as a JSON string, by enquoting dangerous characters...">quotestring</ref>(<ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>&amp;thestr){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="value_8cpp_1ea9c6bfd76e30dca8043d3aca32af73c" kindref="member" tooltip="Replace all occurrences of search with replace in srcstr.">replace_all</ref>(thestr,<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">),<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;\\\\&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="value_8cpp_1ea9c6bfd76e30dca8043d3aca32af73c" kindref="member" tooltip="Replace all occurrences of search with replace in srcstr.">replace_all</ref>(thestr,<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">),<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;\\\&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="value_8cpp_1ea9c6bfd76e30dca8043d3aca32af73c" kindref="member" tooltip="Replace all occurrences of search with replace in srcstr.">replace_all</ref>(thestr,<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">),<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;\\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="value_8cpp_1ea9c6bfd76e30dca8043d3aca32af73c" kindref="member" tooltip="Replace all occurrences of search with replace in srcstr.">replace_all</ref>(thestr,<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">),<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;\\r&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>tmpstr=thestr;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thestr=<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thestr+=tmpstr;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thestr+=<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="value_8cpp_17cabca3f524cd580b70324035ad17860" kindref="member" tooltip="Iterates over the members of an array, formatting them for output.">arraygetstring</ref>(<ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>&amp;thestr,<ref refid="stdcontainers_8h_14fe8a3fd31df9699d616664bad4be235" kindref="member">raw_array_t</ref><sp/>&amp;theval,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enquote=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>separate=</highlight><highlight class="keyword">false</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thestr+=<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>[<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_array_t::iterator<sp/>theiter;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>started=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(theiter=theval.begin();theiter!=theval.end();++theiter){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(started){<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thestr+=<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(separate)<sp/>thestr+=<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>started=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>stra;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*theiter)-&gt;getstring(stra,enquote,separate);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thestr+=stra;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thestr+=<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>]<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="value_8cpp_1f2b61253061b87f15801266ac22f0d14" kindref="member" tooltip="Iterates over the members of an object, formatting them for output.">objectgetstring</ref>(<ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>&amp;thestr,<ref refid="stdcontainers_8h_1ce1309c9afaba2cf388b9425b3d3ef1a" kindref="member">raw_object_t</ref><sp/>&amp;theval,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enquote,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>separate){</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thestr+=<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>{<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_object_t::iterator<sp/>theiter;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>started=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(theiter=theval.begin();theiter!=theval.end();++theiter){</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(started){</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thestr+=<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(separate)<sp/>thestr+=<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>started=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>namestr=(*theiter).first;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="value_8cpp_1e3d202062f43e891db15706b6bdf5b78" kindref="member" tooltip="Makes thestr safe for output as a JSON string, by enquoting dangerous characters...">quotestring</ref>(namestr);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thestr+=namestr;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thestr+=<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>stra;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*theiter).second-&gt;getstring(stra,enquote);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thestr+=stra;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thestr+=<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>}<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>(con/de)structors</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">value::value<sp/>()<sp/>:<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">dt</ref>(datatype::<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">_undefined</ref>){}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">value::value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;nv):<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">dt</ref>(datatype::<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">_undefined</ref>){</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clone(nv);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">value::value(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nval):<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">dt</ref>(datatype::<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">_undefined</ref>){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setnumber(nval);</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">value::value(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nval):<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">dt</ref>(datatype::<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">_undefined</ref>){</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setnumber(nval);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">value::value(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nval):<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">dt</ref>(datatype::<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">_undefined</ref>){</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setnumber(nval);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">value::value(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nval):<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">dt</ref>(datatype::<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">_undefined</ref>){</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setnumber(nval);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>JSON_NO_int64</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="200"><highlight class="normal">value::value(int64_t<sp/>nval):<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">dt</ref>(datatype::<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">_undefined</ref>){</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setnumber(nval);</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">value::value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nval):<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">dt</ref>(datatype::<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">_undefined</ref>){</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setstring(nval);</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">value::value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*nval):<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">dt</ref>(datatype::<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">_undefined</ref>){</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setstring(nval);</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">value::value(<ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe" kindref="member" tooltip="the JSON spec names a number of literals that should be recognised. This enum lists...">literals::literals</ref><sp/>nval):<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">dt</ref>(datatype::<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">_undefined</ref>){</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setliteral(nval);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal">value::value(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nval):<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">dt</ref>(datatype::<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">_undefined</ref>){</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setliteral(nval);</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">value::value(<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">datatype::dt</ref><sp/>ndt){</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>=<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">datatype::_undefined</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_18d312e9a28a7a3f931f71bec837f1ad7" kindref="member" tooltip="Deletes the existing value, and sets the value to a new type, as specified by nv...">setdt</ref>(ndt);</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value::value</ref>(std::string<sp/>nval):<sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>(datatype::<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">_undefined</ref>){</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setstring(nval.c_str());</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal">value::value(std::wstring<sp/>nval):<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">dt</ref>(datatype::<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">_undefined</ref>){</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setstring(nval.c_str());</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">value::~value(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight></codeline>
<codeline lineno="277"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>Miscellaneous<sp/>functions</highlight></codeline>
<codeline lineno="279"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="287"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_12d179b8969c45786200dae9d5d67a382" kindref="member" tooltip="Sets this value to be an exact copy of the data in another value. Recursively copying...">value::clone</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;oldval){</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_array_t::iterator<sp/>valaiter;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_object_t::iterator<sp/>valoiter;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(oldval.<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>){</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbff93b52b78e8af4425d60c2854c6faadc" kindref="member">datatype::_unquoted_string</ref>:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf486d038f97faf5dcf61fc01919818e45" kindref="member">datatype::_string</ref>:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_13a9e44d9a1b41d63e77cdf961a4dc664" kindref="member" tooltip="Sets this value to an empty string.">setstring</ref>(*oldval.<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1cacaa3fe53dbf36861a767d925650618" kindref="member">_string</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf225c9dd9186f1078a3c8fca477da14eb" kindref="member">datatype::_number</ref>:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">setnumber</ref>((*oldval.<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1ef75d36b3acaa5b9b293d16995932535" kindref="member">_number</ref>));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf60deb81efdaedc097cee89b101c23525" kindref="member">datatype::_fixed_number</ref>:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">setnumber</ref>(oldval.<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfd0cd9eeb3409b23a86a4462df6064477" kindref="member">datatype::_literal</ref>:</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_143a95f326cacfa97355aa6462c83ee45" kindref="member" tooltip="Sets this value to a JSON Literal(literals::literals), and initialises it to null...">setliteral</ref>(oldval.<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_17013e85478e2cc8c69bfe9c9b852f878" kindref="member">_literal</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>:</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_15ec5f1419b16fff3709ad8dc5220fcbf" kindref="member" tooltip="Sets this value to an empty JSON Array.">setarray</ref>();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(valaiter=oldval.<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>-&gt;begin();valaiter!=oldval.<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>-&gt;end();++valaiter){</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_1cc4898d3cee6c1e81e491bd7aacc5c3e" kindref="member" tooltip="Adds a copy of newval to the end of the JSON array.">addvalue</ref>((*(*valaiter)));</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>:</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_15b8f5414f33acb66534cfcb7d6a0d6ac" kindref="member" tooltip="Sets this value to an empty JSON Object.">setobject</ref>();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(valoiter=oldval.<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;begin();valoiter!=oldval.<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;end();++valoiter){</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_1cc4898d3cee6c1e81e491bd7aacc5c3e" kindref="member" tooltip="Adds a copy of newval to the end of the JSON array.">addvalue</ref>((*valoiter).first,(*(*valoiter).second));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">datatype::_undefined</ref>:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>Holds:<sp/>clone,<sp/></highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>deletion<sp/>functions</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="336"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1ad8500f20d470799ec32d440bbe77256" kindref="member" tooltip="Looks to see if this value [must be array or object] contains the value pointed to...">value::deletechild</ref>(<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*dval){</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>==<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>){</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_object_t::iterator<sp/>dstval=<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;begin();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_object_t::iterator<sp/>nd=<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;end();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(dstval<sp/>!=<sp/>nd){</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*dstval).second==dval){</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>(*dstval).first;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(*dstval).second;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;erase(dstval);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++dstval;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>==<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>){</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_array_t::iterator<sp/>dstval=<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>-&gt;begin();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_array_t::iterator<sp/>nd=<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>-&gt;end();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(dstval<sp/>!=<sp/>nd){</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*dstval)==dval){</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(*dstval);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>-&gt;erase(dstval);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++dstval;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1ad8500f20d470799ec32d440bbe77256" kindref="member" tooltip="Looks to see if this value [must be array or object] contains the value pointed to...">value::deletechild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*name){</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>olen;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref><sp/>*rname=<ref refid="namespace_j_s_o_n_1_1convert_17e6cdc76c8276a2cd9d42519f5da5688" kindref="member">convert::toachar</ref>(name,wcslen(name),olen);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>!=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_object_t::iterator<sp/>dstval=(<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>)-&gt;find((<ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal">)rname);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dstval==<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;end()){</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>(*dstval).first;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(*dstval).second;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;erase(dstval);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1ad8500f20d470799ec32d440bbe77256" kindref="member" tooltip="Looks to see if this value [must be array or object] contains the value pointed to...">value::deletechild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name){</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>olen;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref><sp/>*rname=<ref refid="namespace_j_s_o_n_1_1convert_17e6cdc76c8276a2cd9d42519f5da5688" kindref="member">convert::toachar</ref>(name,strlen(name),olen);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>!=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_object_t::iterator<sp/>dstval=(<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>)-&gt;find((<ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal">)rname);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dstval==<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;end()){</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>(*dstval).first;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(*dstval).second;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;erase(dstval);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1b5682c6c4c6d674784d477907db0f002" kindref="member" tooltip="Removes and deletes all child values of this array or object.">value::clear</ref>(){</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>==<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>){</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_array_t::iterator<sp/>oi;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(oi<sp/>=<sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>-&gt;begin();<sp/>oi<sp/>!=<sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>-&gt;end();<sp/>++oi){</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>*oi;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>==<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>){</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_object_t::iterator<sp/>oi;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(oi<sp/>=<sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;begin();<sp/>oi<sp/>!=<sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;end();<sp/>++oi){</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>(*oi).first;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><sp/>(*oi).second;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">value::deletevalue</ref>(){</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1a2f9bc4454512a18dc9f17e2de93d867" kindref="member">_v</ref>==NULL){<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">datatype::_undefined</ref>;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>){</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbff93b52b78e8af4425d60c2854c6faadc" kindref="member">datatype::_unquoted_string</ref>:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf486d038f97faf5dcf61fc01919818e45" kindref="member">datatype::_string</ref>:</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1cacaa3fe53dbf36861a767d925650618" kindref="member">_string</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf225c9dd9186f1078a3c8fca477da14eb" kindref="member">datatype::_number</ref>:</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1ef75d36b3acaa5b9b293d16995932535" kindref="member">_number</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf60deb81efdaedc097cee89b101c23525" kindref="member">datatype::_fixed_number</ref>:</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref>=0;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfd0cd9eeb3409b23a86a4462df6064477" kindref="member">datatype::_literal</ref>:</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_17013e85478e2cc8c69bfe9c9b852f878" kindref="member">_literal</ref>=<ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffed8ad8e6e8093104a13330a2e8ea5bbd8" kindref="member">literals::_null</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>:</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_1b5682c6c4c6d674784d477907db0f002" kindref="member" tooltip="Removes and deletes all child values of this array or object.">clear</ref>();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>:</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_1b5682c6c4c6d674784d477907db0f002" kindref="member" tooltip="Removes and deletes all child values of this array or object.">clear</ref>();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">datatype::_undefined</ref>:</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">datatype::_undefined</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1a2f9bc4454512a18dc9f17e2de93d867" kindref="member">_v</ref>=NULL;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight></codeline>
<codeline lineno="490"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>Value<sp/>setting<sp/>functions</highlight></codeline>
<codeline lineno="492"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="500"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_13a9e44d9a1b41d63e77cdf961a4dc664" kindref="member" tooltip="Sets this value to an empty string.">value::setstring</ref>(){</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf486d038f97faf5dcf61fc01919818e45" kindref="member">datatype::_string</ref>;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1cacaa3fe53dbf36861a767d925650618" kindref="member">_string</ref>=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_13a9e44d9a1b41d63e77cdf961a4dc664" kindref="member" tooltip="Sets this value to an empty string.">value::setstring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*newval){</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf486d038f97faf5dcf61fc01919818e45" kindref="member">datatype::_string</ref>;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1cacaa3fe53dbf36861a767d925650618" kindref="member">_string</ref>=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref>;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1convert_133538051b74c13bee55515c7c0529068" kindref="member">convert::toastr</ref>(*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1cacaa3fe53dbf36861a767d925650618" kindref="member">_string</ref>,newval);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_13a9e44d9a1b41d63e77cdf961a4dc664" kindref="member" tooltip="Sets this value to an empty string.">value::setstring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::wstring<sp/>&amp;newval){</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf486d038f97faf5dcf61fc01919818e45" kindref="member">datatype::_string</ref>;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1cacaa3fe53dbf36861a767d925650618" kindref="member">_string</ref>=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref>;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1convert_133538051b74c13bee55515c7c0529068" kindref="member">convert::toastr</ref>(*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1cacaa3fe53dbf36861a767d925650618" kindref="member">_string</ref>,newval);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_13a9e44d9a1b41d63e77cdf961a4dc664" kindref="member" tooltip="Sets this value to an empty string.">value::setstring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*newval){</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf486d038f97faf5dcf61fc01919818e45" kindref="member">datatype::_string</ref>;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1cacaa3fe53dbf36861a767d925650618" kindref="member">_string</ref>=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1convert_133538051b74c13bee55515c7c0529068" kindref="member">convert::toastr</ref>(*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1cacaa3fe53dbf36861a767d925650618" kindref="member">_string</ref>,newval);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_13a9e44d9a1b41d63e77cdf961a4dc664" kindref="member" tooltip="Sets this value to an empty string.">value::setstring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;newval){</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf486d038f97faf5dcf61fc01919818e45" kindref="member">datatype::_string</ref>;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1cacaa3fe53dbf36861a767d925650618" kindref="member">_string</ref>=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref>;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1convert_133538051b74c13bee55515c7c0529068" kindref="member">convert::toastr</ref>(*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1cacaa3fe53dbf36861a767d925650618" kindref="member">_string</ref>,newval);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1befee3582d3174f28a7f1862a7bf9686" kindref="member" tooltip="Sets this value to a floating point JSON Number. The float is not initialised to...">value::setfloat</ref>(){</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf225c9dd9186f1078a3c8fca477da14eb" kindref="member">datatype::_number</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1ef75d36b3acaa5b9b293d16995932535" kindref="member">_number</ref>=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="types_8h_1e762403f037733722b8e9808df502694" kindref="member">afloat</ref>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_163b5aaae241ca9ca1631b02bd2c127e1" kindref="member" tooltip="Sets this value to an integer JSON Number. The float is not initialised to any specific...">value::setint</ref>(){</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf60deb81efdaedc097cee89b101c23525" kindref="member">datatype::_fixed_number</ref>;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1ef75d36b3acaa5b9b293d16995932535" kindref="member">_number</ref>=0;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>JSON_NO_int64</highlight></codeline>
<codeline lineno="606"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="616"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">value::setnumber</ref>(int64_t<sp/>newval){</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf60deb81efdaedc097cee89b101c23525" kindref="member">datatype::_fixed_number</ref>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref>=(<ref refid="types_8h_1af23a2fdba3012f0c512f0fc318512d9" kindref="member">aint</ref>)newval;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref>==newval;</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">value::operator=</ref>(int64_t<sp/>newval){</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">setnumber</ref>(newval);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="638"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="648"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">value::setnumber</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newval){</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf60deb81efdaedc097cee89b101c23525" kindref="member">datatype::_fixed_number</ref>;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref>=(<ref refid="types_8h_1af23a2fdba3012f0c512f0fc318512d9" kindref="member">aint</ref>)newval;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref>==newval;</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">value::setnumber</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>newval){</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf60deb81efdaedc097cee89b101c23525" kindref="member">datatype::_fixed_number</ref>;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref>=(<ref refid="types_8h_1af23a2fdba3012f0c512f0fc318512d9" kindref="member">aint</ref>)newval;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref>==newval;</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">value::setnumber</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newval){</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf225c9dd9186f1078a3c8fca477da14eb" kindref="member">datatype::_number</ref>;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1ef75d36b3acaa5b9b293d16995932535" kindref="member">_number</ref>=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="types_8h_1e762403f037733722b8e9808df502694" kindref="member">afloat</ref>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1ef75d36b3acaa5b9b293d16995932535" kindref="member">_number</ref>)=(<ref refid="types_8h_1e762403f037733722b8e9808df502694" kindref="member">afloat</ref>)newval;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_143a95f326cacfa97355aa6462c83ee45" kindref="member" tooltip="Sets this value to a JSON Literal(literals::literals), and initialises it to null...">value::setliteral</ref>(){</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfd0cd9eeb3409b23a86a4462df6064477" kindref="member">datatype::_literal</ref>;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_17013e85478e2cc8c69bfe9c9b852f878" kindref="member">_literal</ref><sp/>=<sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffed8ad8e6e8093104a13330a2e8ea5bbd8" kindref="member">literals::_null</ref>;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_143a95f326cacfa97355aa6462c83ee45" kindref="member" tooltip="Sets this value to a JSON Literal(literals::literals), and initialises it to null...">value::setliteral</ref>(<ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe" kindref="member" tooltip="the JSON spec names a number of literals that should be recognised. This enum lists...">literals::literals</ref><sp/>newval){</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfd0cd9eeb3409b23a86a4462df6064477" kindref="member">datatype::_literal</ref>;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_17013e85478e2cc8c69bfe9c9b852f878" kindref="member">_literal</ref><sp/>=<sp/>newval;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_143a95f326cacfa97355aa6462c83ee45" kindref="member" tooltip="Sets this value to a JSON Literal(literals::literals), and initialises it to null...">value::setliteral</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>newval){</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfd0cd9eeb3409b23a86a4462df6064477" kindref="member">datatype::_literal</ref>;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_17013e85478e2cc8c69bfe9c9b852f878" kindref="member">_literal</ref><sp/>=<sp/>(newval)?<sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe3662edfe302cacabb01be98caf3efbde" kindref="member">literals::_true</ref><sp/>:<sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe2ea46da5e9fc44900ef40db35d50db76" kindref="member">literals::_false</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_15ec5f1419b16fff3709ad8dc5220fcbf" kindref="member" tooltip="Sets this value to an empty JSON Array.">value::setarray</ref>(){</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="stdcontainers_8h_14fe8a3fd31df9699d616664bad4be235" kindref="member">raw_array_t</ref>;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_15ec5f1419b16fff3709ad8dc5220fcbf" kindref="member" tooltip="Sets this value to an empty JSON Array.">value::setarray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdcontainers_8h_14fe8a3fd31df9699d616664bad4be235" kindref="member">raw_array_t</ref><sp/>&amp;newval){</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="stdcontainers_8h_14fe8a3fd31df9699d616664bad4be235" kindref="member">raw_array_t</ref>(newval);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_UNSAFE_FUNS</highlight></codeline>
<codeline lineno="767"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="783"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_15ec5f1419b16fff3709ad8dc5220fcbf" kindref="member" tooltip="Sets this value to an empty JSON Array.">value::setarray</ref>(<ref refid="stdcontainers_8h_14fe8a3fd31df9699d616664bad4be235" kindref="member">raw_array_t</ref><sp/>*newval){</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref><sp/>=<sp/>newval;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_15b8f5414f33acb66534cfcb7d6a0d6ac" kindref="member" tooltip="Sets this value to an empty JSON Object.">value::setobject</ref>(<ref refid="stdcontainers_8h_1ce1309c9afaba2cf388b9425b3d3ef1a" kindref="member">raw_object_t</ref><sp/>*newval){</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref><sp/>=<sp/>newval;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="813"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="823"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_15b8f5414f33acb66534cfcb7d6a0d6ac" kindref="member" tooltip="Sets this value to an empty JSON Object.">value::setobject</ref>(){</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="stdcontainers_8h_1ce1309c9afaba2cf388b9425b3d3ef1a" kindref="member">raw_object_t</ref>();</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_15b8f5414f33acb66534cfcb7d6a0d6ac" kindref="member" tooltip="Sets this value to an empty JSON Object.">value::setobject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdcontainers_8h_1ce1309c9afaba2cf388b9425b3d3ef1a" kindref="member">raw_object_t</ref><sp/>&amp;newval){</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="stdcontainers_8h_1ce1309c9afaba2cf388b9425b3d3ef1a" kindref="member">raw_object_t</ref>(newval);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_18d312e9a28a7a3f931f71bec837f1ad7" kindref="member" tooltip="Deletes the existing value, and sets the value to a new type, as specified by nv...">value::setdt</ref>(<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">datatype::dt</ref><sp/>nv){</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(nv){</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>:</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_15ec5f1419b16fff3709ad8dc5220fcbf" kindref="member" tooltip="Sets this value to an empty JSON Array.">setarray</ref>();</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf60deb81efdaedc097cee89b101c23525" kindref="member">datatype::_fixed_number</ref>:</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">setnumber</ref>(0);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfd0cd9eeb3409b23a86a4462df6064477" kindref="member">datatype::_literal</ref>:</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_143a95f326cacfa97355aa6462c83ee45" kindref="member" tooltip="Sets this value to a JSON Literal(literals::literals), and initialises it to null...">setliteral</ref>(<ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffed8ad8e6e8093104a13330a2e8ea5bbd8" kindref="member">literals::_null</ref>);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf225c9dd9186f1078a3c8fca477da14eb" kindref="member">datatype::_number</ref>:</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">setnumber</ref>(0.0);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>:</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_15b8f5414f33acb66534cfcb7d6a0d6ac" kindref="member" tooltip="Sets this value to an empty JSON Object.">setobject</ref>();</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbff93b52b78e8af4425d60c2854c6faadc" kindref="member">datatype::_unquoted_string</ref>:</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf486d038f97faf5dcf61fc01919818e45" kindref="member">datatype::_string</ref>:</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_13a9e44d9a1b41d63e77cdf961a4dc664" kindref="member" tooltip="Sets this value to an empty string.">setstring</ref>();</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">datatype::_undefined</ref>:</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>=<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">datatype::_undefined</ref>;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight></codeline>
<codeline lineno="879"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>overloaded<sp/>=<sp/>functions</highlight></codeline>
<codeline lineno="881"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">value::operator=</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v){</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">setnumber</ref>(v);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">value::operator=</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v){</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">setnumber</ref>(v);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">value::operator=</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v){</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">setnumber</ref>(v);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">value::operator=</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v){</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">setnumber</ref>(v);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="914"><highlight class="normal">}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">value::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*v){</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_13a9e44d9a1b41d63e77cdf961a4dc664" kindref="member" tooltip="Sets this value to an empty string.">setstring</ref>(v);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">value::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*v){</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_13a9e44d9a1b41d63e77cdf961a4dc664" kindref="member" tooltip="Sets this value to an empty string.">setstring</ref>(v);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="931"><highlight class="normal">}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">value::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::wstring&amp;<sp/>v){</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_13a9e44d9a1b41d63e77cdf961a4dc664" kindref="member" tooltip="Sets this value to an empty string.">setstring</ref>(v);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">value::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>v){</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_13a9e44d9a1b41d63e77cdf961a4dc664" kindref="member" tooltip="Sets this value to an empty string.">setstring</ref>(v);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">value::operator=</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v){</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_143a95f326cacfa97355aa6462c83ee45" kindref="member" tooltip="Sets this value to a JSON Literal(literals::literals), and initialises it to null...">setliteral</ref>(v);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">value::operator=</ref>(<ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe" kindref="member" tooltip="the JSON spec names a number of literals that should be recognised. This enum lists...">literals::literals</ref><sp/>v){</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_143a95f326cacfa97355aa6462c83ee45" kindref="member" tooltip="Sets this value to a JSON Literal(literals::literals), and initialises it to null...">setliteral</ref>(v);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="967"><highlight class="normal">}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/></highlight></codeline>
<codeline lineno="970"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>Adding<sp/>Child<sp/>Values</highlight></codeline>
<codeline lineno="972"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="983"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1cc4898d3cee6c1e81e491bd7aacc5c3e" kindref="member" tooltip="Adds a copy of newval to the end of the JSON array.">value::addvalue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;newval){</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>!=<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>-&gt;push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>(newval));</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_UNSAFE_FUNS</highlight></codeline>
<codeline lineno="990"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1008"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1cc4898d3cee6c1e81e491bd7aacc5c3e" kindref="member" tooltip="Adds a copy of newval to the end of the JSON array.">value::addvalue</ref>(<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*newval){</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>!=<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>-&gt;push_back(newval);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1cc4898d3cee6c1e81e491bd7aacc5c3e" kindref="member" tooltip="Adds a copy of newval to the end of the JSON array.">value::addvalue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*newname,<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*newval){</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>!=<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>)[(<ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref><sp/>*)newname]=newval;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1057"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1cc4898d3cee6c1e81e491bd7aacc5c3e" kindref="member" tooltip="Adds a copy of newval to the end of the JSON array.">value::addvalue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*newname,<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*newval){</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>!=<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>olen;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref><sp/>*name<sp/>=<sp/><ref refid="namespace_j_s_o_n_1_1convert_17e6cdc76c8276a2cd9d42519f5da5688" kindref="member">convert::toachar</ref>(newname,strlen(newname),olen);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!name)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>)[name]=newval;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1066"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1077"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1cc4898d3cee6c1e81e491bd7aacc5c3e" kindref="member" tooltip="Adds a copy of newval to the end of the JSON array.">value::addvalue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*newname,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;newval){</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>!=<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>olen;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref><sp/>*name<sp/>=<sp/><ref refid="namespace_j_s_o_n_1_1convert_17e6cdc76c8276a2cd9d42519f5da5688" kindref="member">convert::toachar</ref>(newname,wcslen(newname),olen);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!name)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>)[name]=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>(newval);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1cc4898d3cee6c1e81e491bd7aacc5c3e" kindref="member" tooltip="Adds a copy of newval to the end of the JSON array.">value::addvalue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*newname,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;newval){</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>!=<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>olen;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref><sp/>*name<sp/>=<sp/><ref refid="namespace_j_s_o_n_1_1convert_17e6cdc76c8276a2cd9d42519f5da5688" kindref="member">convert::toachar</ref>(newname,strlen(newname),olen);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!name)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>)[name]=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>(newval);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight></codeline>
<codeline lineno="1106"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>Getting<sp/>Values<sp/>/<sp/>Types</highlight></codeline>
<codeline lineno="1108"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">datatype::dt</ref><sp/><ref refid="class_j_s_o_n_1_1value_1d08b4c900efc427c06b41a981939393c" kindref="member" tooltip="returns the curent datatype::dt of this value">value::getdatatype</ref>(){</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_131ca1af8ecc1ebe01e23590ce7bf7b8c" kindref="member" tooltip="shallow searches for a child value whose name matches name. this must be a JSON object...">value::getchild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*name){</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>!=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_170c9d6308c56af1ac1924db85810c4d9" kindref="member" tooltip="Used by any function that should return a reference to a value but may not be able...">nullval</ref>;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>olen;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref><sp/>*rname=<ref refid="namespace_j_s_o_n_1_1convert_17e6cdc76c8276a2cd9d42519f5da5688" kindref="member">convert::toachar</ref>(name,wcslen(name),olen);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_object_t::iterator<sp/>dstval=(<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>)-&gt;find((<ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal">)rname);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dstval==<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;end()){</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*nval<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>();</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;insert(make_pair(rname,nval));</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*nval;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>rname;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*(*dstval).second);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>rname;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_170c9d6308c56af1ac1924db85810c4d9" kindref="member" tooltip="Used by any function that should return a reference to a value but may not be able...">nullval</ref>;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_131ca1af8ecc1ebe01e23590ce7bf7b8c" kindref="member" tooltip="shallow searches for a child value whose name matches name. this must be a JSON object...">value::getchild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name){</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>!=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_170c9d6308c56af1ac1924db85810c4d9" kindref="member" tooltip="Used by any function that should return a reference to a value but may not be able...">nullval</ref>;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>olen;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref><sp/>*rname=<ref refid="namespace_j_s_o_n_1_1convert_17e6cdc76c8276a2cd9d42519f5da5688" kindref="member">convert::toachar</ref>(name,strlen(name),olen);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_object_t::iterator<sp/>dstval=(<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>)-&gt;find((<ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal">)rname);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dstval==<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;end()){</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*nval<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>();</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;insert(make_pair(rname,nval));</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*nval;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>rname;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*(*dstval).second);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>rname;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_170c9d6308c56af1ac1924db85810c4d9" kindref="member" tooltip="Used by any function that should return a reference to a value but may not be able...">nullval</ref>;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*<ref refid="class_j_s_o_n_1_1value_183084f869fd06f99f5974135c0418f45" kindref="member" tooltip="shallow searches for a child that aval points to. this must be a JSON array.">value::childexists</ref>(<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*aval){</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>==<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>){</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_array_t::iterator<sp/>cur<sp/>=<sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>-&gt;begin();</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;cur<sp/>!=<sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>-&gt;end();<sp/>++<sp/>cur){</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*cur)<sp/>==<sp/>aval)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>aval;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="preprocessor">#ifdef<sp/>JSON_USE_WCHAR</highlight></codeline>
<codeline lineno="1214"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*<ref refid="class_j_s_o_n_1_1value_183084f869fd06f99f5974135c0418f45" kindref="member" tooltip="shallow searches for a child that aval points to. this must be a JSON array.">value::childexists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name){</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1216"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*<ref refid="class_j_s_o_n_1_1value_183084f869fd06f99f5974135c0418f45" kindref="member" tooltip="shallow searches for a child that aval points to. this must be a JSON array.">value::childexists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*name){</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1218"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>olen;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref><sp/>*tmp<sp/>=<sp/><ref refid="namespace_j_s_o_n_1_1convert_17e6cdc76c8276a2cd9d42519f5da5688" kindref="member">convert::toachar</ref>(name,strlen(name),olen);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_183084f869fd06f99f5974135c0418f45" kindref="member" tooltip="shallow searches for a child that aval points to. this must be a JSON array.">childexists</ref>(tmp);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tmp;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*<ref refid="class_j_s_o_n_1_1value_183084f869fd06f99f5974135c0418f45" kindref="member" tooltip="shallow searches for a child that aval points to. this must be a JSON array.">value::childexists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref><sp/>*name){</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>!=<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_object_t::iterator<sp/>dstval=(<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>)-&gt;find((<ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal">)name);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dstval==<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;end()){</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*dstval).second;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*<ref refid="class_j_s_o_n_1_1value_183084f869fd06f99f5974135c0418f45" kindref="member" tooltip="shallow searches for a child that aval points to. this must be a JSON array.">value::childexists</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ofs){</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>!=<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ofs<sp/>&gt;=<sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>-&gt;size()){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*(<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>))[ofs];</highlight></codeline>
<codeline lineno="1260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1456130bc7bac52d3ec777d943a733475" kindref="member" tooltip="returns a bool representing the current value of this ">value::getbool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_default){</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>){</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>:</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>-&gt;size()<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf60deb81efdaedc097cee89b101c23525" kindref="member">datatype::_fixed_number</ref>:</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfd0cd9eeb3409b23a86a4462df6064477" kindref="member">datatype::_literal</ref>:</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_17013e85478e2cc8c69bfe9c9b852f878" kindref="member">_literal</ref><sp/>==<sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe3662edfe302cacabb01be98caf3efbde" kindref="member">literals::_true</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf225c9dd9186f1078a3c8fca477da14eb" kindref="member">datatype::_number</ref>:</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1ef75d36b3acaa5b9b293d16995932535" kindref="member">_number</ref>)<sp/>==<sp/>0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>:</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>-&gt;size()<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbff93b52b78e8af4425d60c2854c6faadc" kindref="member">datatype::_unquoted_string</ref>:</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf486d038f97faf5dcf61fc01919818e45" kindref="member">datatype::_string</ref>:</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1cacaa3fe53dbf36861a767d925650618" kindref="member">_string</ref>-&gt;length()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">datatype::_undefined</ref>:</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_default;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_default;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe" kindref="member" tooltip="the JSON spec names a number of literals that should be recognised. This enum lists...">JSON::literals::literals</ref><sp/><ref refid="class_j_s_o_n_1_1value_16a82866b5e34cf74d6e2a01e0d761eb6" kindref="member" tooltip="returns a literals::literals representing the current value of this ">value::getliteral</ref>(<ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe" kindref="member" tooltip="the JSON spec names a number of literals that should be recognised. This enum lists...">JSON::literals::literals</ref><sp/>_default){</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>==<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfd0cd9eeb3409b23a86a4462df6064477" kindref="member">datatype::_literal</ref>)</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_17013e85478e2cc8c69bfe9c9b852f878" kindref="member">_literal</ref>;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_default;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><ref refid="types_8h_1af23a2fdba3012f0c512f0fc318512d9" kindref="member">aint</ref><sp/><ref refid="class_j_s_o_n_1_1value_1f512893b13b6391a749a328480546ae3" kindref="member" tooltip="returns an integer representing the current value of this ">value::getinteger</ref>(<ref refid="types_8h_1af23a2fdba3012f0c512f0fc318512d9" kindref="member">aint</ref><sp/>_default){</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>){</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>:</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfd0cd9eeb3409b23a86a4462df6064477" kindref="member">datatype::_literal</ref>:</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>:</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbff93b52b78e8af4425d60c2854c6faadc" kindref="member">datatype::_unquoted_string</ref>:</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf486d038f97faf5dcf61fc01919818e45" kindref="member">datatype::_string</ref>:</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">datatype::_undefined</ref>:</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_default;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf60deb81efdaedc097cee89b101c23525" kindref="member">datatype::_fixed_number</ref>:</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref>;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf225c9dd9186f1078a3c8fca477da14eb" kindref="member">datatype::_number</ref>:</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="types_8h_1af23a2fdba3012f0c512f0fc318512d9" kindref="member">aint</ref>)(*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1ef75d36b3acaa5b9b293d16995932535" kindref="member">_number</ref>);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_default;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><ref refid="types_8h_1e762403f037733722b8e9808df502694" kindref="member">afloat</ref><sp/><ref refid="class_j_s_o_n_1_1value_102e43a565df0fb16a89d9042aa4d0a06" kindref="member" tooltip="returns a float representing the current value of this ">value::getfloat</ref>(<ref refid="types_8h_1e762403f037733722b8e9808df502694" kindref="member">afloat</ref><sp/>_default){</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>){</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>:</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_default;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf60deb81efdaedc097cee89b101c23525" kindref="member">datatype::_fixed_number</ref>:</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="types_8h_1e762403f037733722b8e9808df502694" kindref="member">afloat</ref>)<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref>;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfd0cd9eeb3409b23a86a4462df6064477" kindref="member">datatype::_literal</ref>:</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_default;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf225c9dd9186f1078a3c8fca477da14eb" kindref="member">datatype::_number</ref>:</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1ef75d36b3acaa5b9b293d16995932535" kindref="member">_number</ref>);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>:</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_default;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbff93b52b78e8af4425d60c2854c6faadc" kindref="member">datatype::_unquoted_string</ref>:</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf486d038f97faf5dcf61fc01919818e45" kindref="member">datatype::_string</ref>:</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_default;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">datatype::_undefined</ref>:</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_default;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_default;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal">std::wstring<sp/>&amp;<ref refid="class_j_s_o_n_1_1value_1b06b41aaeea6bde872f6a78fd4656c1f" kindref="member" tooltip="fills dest with the string representation of the current value of this ">value::getstring</ref>(std::wstring<sp/>&amp;dest,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enquote,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>newline){</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>strnum[32];</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>tmpstr;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>){</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbff93b52b78e8af4425d60c2854c6faadc" kindref="member">datatype::_unquoted_string</ref>:</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf486d038f97faf5dcf61fc01919818e45" kindref="member">datatype::_string</ref>:</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpstr<sp/>=<sp/>*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1cacaa3fe53dbf36861a767d925650618" kindref="member">_string</ref>;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enquote)<ref refid="value_8cpp_1e3d202062f43e891db15706b6bdf5b78" kindref="member" tooltip="Makes thestr safe for output as a JSON string, by enquoting dangerous characters...">quotestring</ref>(tmpstr);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1convert_10ac37d233f23db273e60c12e63023aa3" kindref="member">convert::towstr</ref>(dest,tmpstr);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf60deb81efdaedc097cee89b101c23525" kindref="member">datatype::_fixed_number</ref>:</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>JSON_NUMBER_INT</highlight></codeline>
<codeline lineno="1441"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swprintf(strnum,31,L</highlight><highlight class="stringliteral">&quot;%.1d&quot;</highlight><highlight class="normal">,<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref>);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="1443"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>JSON_NUMBER_LONG</highlight></codeline>
<codeline lineno="1444"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swprintf(strnum,31,L</highlight><highlight class="stringliteral">&quot;%.1ld&quot;</highlight><highlight class="normal">,<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref>);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="1446"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>JSON_NUMBER_i64</highlight></codeline>
<codeline lineno="1447"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swprintf(strnum,31,L</highlight><highlight class="stringliteral">&quot;%.1lld&quot;</highlight><highlight class="normal">,<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref>);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="1449"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1convert_10ac37d233f23db273e60c12e63023aa3" kindref="member">convert::towstr</ref>(dest,strnum);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf225c9dd9186f1078a3c8fca477da14eb" kindref="member">datatype::_number</ref>:</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swprintf(strnum,31,L</highlight><highlight class="stringliteral">&quot;%lG&quot;</highlight><highlight class="normal">,(*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1ef75d36b3acaa5b9b293d16995932535" kindref="member">_number</ref>));</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1convert_10ac37d233f23db273e60c12e63023aa3" kindref="member">convert::towstr</ref>(dest,strnum);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfd0cd9eeb3409b23a86a4462df6064477" kindref="member">datatype::_literal</ref>:</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_17013e85478e2cc8c69bfe9c9b852f878" kindref="member">_literal</ref>){</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe2ea46da5e9fc44900ef40db35d50db76" kindref="member">literals::_false</ref>:dest=L</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe3662edfe302cacabb01be98caf3efbde" kindref="member">literals::_true</ref>:dest=L</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffed8ad8e6e8093104a13330a2e8ea5bbd8" kindref="member">literals::_null</ref>:dest=L</highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dest;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>:</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="value_8cpp_17cabca3f524cd580b70324035ad17860" kindref="member" tooltip="Iterates over the members of an array, formatting them for output.">arraygetstring</ref>(tmpstr,(*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>),enquote,newline);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1convert_10ac37d233f23db273e60c12e63023aa3" kindref="member">convert::towstr</ref>(dest,tmpstr);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>:</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="value_8cpp_1f2b61253061b87f15801266ac22f0d14" kindref="member" tooltip="Iterates over the members of an object, formatting them for output.">objectgetstring</ref>(tmpstr,(*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>),enquote,newline);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1convert_10ac37d233f23db273e60c12e63023aa3" kindref="member">convert::towstr</ref>(dest,tmpstr);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dest;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\brief</highlight></codeline>
<codeline lineno="1476"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>fills<sp/>\p<sp/>dest<sp/>with<sp/>the<sp/>string<sp/>representation<sp/>of<sp/>the<sp/>current<sp/>%value<sp/>of<sp/>\p<sp/>this</highlight></codeline>
<codeline lineno="1477"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1478"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>datatype<sp/>is<sp/>fixed_number<sp/>(integer),<sp/>or<sp/>number<sp/>(float),<sp/>then<sp/>\p<sp/>dst<sp/>will<sp/>contain<sp/>a<sp/>string<sp/>representation<sp/>of<sp/>the<sp/>number,<sp/>similar<sp/>to<sp/>itoa<sp/>or<sp/>gcvt.</highlight></codeline>
<codeline lineno="1479"><highlight class="comment"></highlight></codeline>
<codeline lineno="1480"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>datatype<sp/>is<sp/>string,<sp/>then<sp/>\p<sp/>dst<sp/>will<sp/>contain<sp/>the<sp/>string.</highlight></codeline>
<codeline lineno="1481"><highlight class="comment"></highlight></codeline>
<codeline lineno="1482"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>datatype<sp/>is<sp/>literal,<sp/>then<sp/>\p<sp/>dst<sp/>will<sp/>contain<sp/>one<sp/>of:<sp/>L&quot;true&quot;,L&quot;false&quot;<sp/>or<sp/>L&quot;null&quot;</highlight></codeline>
<codeline lineno="1483"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>datatype<sp/>is<sp/>array<sp/>or<sp/>object,<sp/>then<sp/>\p<sp/>dst<sp/>will<sp/>contain<sp/>valid<sp/>JSON,<sp/>while<sp/>each<sp/>child<sp/>added<sp/>recursively.<sp/>[output<sp/>is<sp/>only<sp/>valid<sp/>JSON<sp/>if<sp/>\p<sp/>enquote<sp/>is<sp/>true]</highlight></codeline>
<codeline lineno="1485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1486"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>dest</highlight></codeline>
<codeline lineno="1487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>will<sp/>be<sp/>filled<sp/>with<sp/>the<sp/>return<sp/>value</highlight></codeline>
<codeline lineno="1488"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>enquote</highlight></codeline>
<codeline lineno="1490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>this<sp/>is<sp/>true,<sp/>then<sp/>strings<sp/>and<sp/>object<sp/>names<sp/>will<sp/>be<sp/>properly<sp/>quoted<sp/>and<sp/>escaped.<sp/><sp/>passing<sp/>true<sp/>here<sp/>will<sp/>guarantee<sp/>valid<sp/>JSON</highlight></codeline>
<codeline lineno="1491"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1492"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>newline</highlight></codeline>
<codeline lineno="1493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>\p<sp/>this<sp/>is<sp/>an<sp/>object<sp/>or<sp/>array,<sp/>then<sp/>each<sp/>child<sp/>value<sp/>will<sp/>be<sp/>output<sp/>on<sp/>a<sp/>separate<sp/>line.</highlight></codeline>
<codeline lineno="1494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>\returns</highlight></codeline>
<codeline lineno="1496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>reference<sp/>to<sp/>dest.</highlight></codeline>
<codeline lineno="1497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1498"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal">std::string<sp/>&amp;<ref refid="class_j_s_o_n_1_1value_1b06b41aaeea6bde872f6a78fd4656c1f" kindref="member" tooltip="fills dest with the string representation of the current value of this ">value::getstring</ref>(std::string<sp/>&amp;dest,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enquote,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>newline){</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>strnum[48];</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>tmpstr;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>){</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbff93b52b78e8af4425d60c2854c6faadc" kindref="member">datatype::_unquoted_string</ref>:</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf486d038f97faf5dcf61fc01919818e45" kindref="member">datatype::_string</ref>:</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpstr<sp/>=<sp/>*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1cacaa3fe53dbf36861a767d925650618" kindref="member">_string</ref>;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enquote)<ref refid="value_8cpp_1e3d202062f43e891db15706b6bdf5b78" kindref="member" tooltip="Makes thestr safe for output as a JSON string, by enquoting dangerous characters...">quotestring</ref>(tmpstr);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1convert_1f9cafbeaa3dd761ce5e43c3a5773c5a1" kindref="member">convert::tostr</ref>(dest,tmpstr);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf60deb81efdaedc097cee89b101c23525" kindref="member">datatype::_fixed_number</ref>:</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>JSON_NUMBER_INT</highlight></codeline>
<codeline lineno="1511"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swprintf(strnum,31,L</highlight><highlight class="stringliteral">&quot;%.1d&quot;</highlight><highlight class="normal">,<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref>);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="1513"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>JSON_NUMBER_LONG</highlight></codeline>
<codeline lineno="1514"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swprintf(strnum,31,L</highlight><highlight class="stringliteral">&quot;%.1ld&quot;</highlight><highlight class="normal">,<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref>);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="1516"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>JSON_NUMBER_i64</highlight></codeline>
<codeline lineno="1517"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swprintf(strnum,31,L</highlight><highlight class="stringliteral">&quot;%.1lld&quot;</highlight><highlight class="normal">,<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref>);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="1519"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1convert_1f9cafbeaa3dd761ce5e43c3a5773c5a1" kindref="member">convert::tostr</ref>(dest,strnum);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf225c9dd9186f1078a3c8fca477da14eb" kindref="member">datatype::_number</ref>:</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swprintf(strnum,31,L</highlight><highlight class="stringliteral">&quot;%lG&quot;</highlight><highlight class="normal">,(*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1ef75d36b3acaa5b9b293d16995932535" kindref="member">_number</ref>));</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1convert_1f9cafbeaa3dd761ce5e43c3a5773c5a1" kindref="member">convert::tostr</ref>(dest,strnum);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfd0cd9eeb3409b23a86a4462df6064477" kindref="member">datatype::_literal</ref>:</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_17013e85478e2cc8c69bfe9c9b852f878" kindref="member">_literal</ref>){</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe2ea46da5e9fc44900ef40db35d50db76" kindref="member">literals::_false</ref>:dest=</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe3662edfe302cacabb01be98caf3efbde" kindref="member">literals::_true</ref>:dest=</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffed8ad8e6e8093104a13330a2e8ea5bbd8" kindref="member">literals::_null</ref>:dest=</highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dest;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>:</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="value_8cpp_17cabca3f524cd580b70324035ad17860" kindref="member" tooltip="Iterates over the members of an array, formatting them for output.">arraygetstring</ref>(tmpstr,(*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>),enquote,newline);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1convert_1f9cafbeaa3dd761ce5e43c3a5773c5a1" kindref="member">convert::tostr</ref>(dest,tmpstr);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>:</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="value_8cpp_1f2b61253061b87f15801266ac22f0d14" kindref="member" tooltip="Iterates over the members of an object, formatting them for output.">objectgetstring</ref>(tmpstr,(*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>),enquote,newline);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1convert_1f9cafbeaa3dd761ce5e43c3a5773c5a1" kindref="member">convert::tostr</ref>(dest,tmpstr);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dest;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\brief</highlight></codeline>
<codeline lineno="1547"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Gets<sp/>a<sp/>refrence<sp/>to<sp/>the<sp/>std::[w]string<sp/>used<sp/>internally<sp/>to<sp/>store<sp/>the<sp/>string.<sp/>[only<sp/>when<sp/>datatype<sp/>==<sp/>_string]</highlight></codeline>
<codeline lineno="1548"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1549"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>\returns</highlight></codeline>
<codeline lineno="1550"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>std::[w]string<sp/>used<sp/>to<sp/>store<sp/>the<sp/>%JSON<sp/>string.</highlight></codeline>
<codeline lineno="1551"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>WARNING,<sp/>this<sp/>method<sp/>only<sp/>succeeds<sp/>if<sp/>the<sp/>datatype<sp/>of<sp/>\p<sp/>this<sp/>is<sp/>a<sp/>string.</highlight></codeline>
<codeline lineno="1552"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="1553"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>An<sp/>exception<sp/>will<sp/>be<sp/>thrown<sp/>if<sp/>\p<sp/>this<sp/>is<sp/>the<sp/>wrong<sp/>datatype</highlight></codeline>
<codeline lineno="1554"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1value_11ec3c8be169fe9e771cf2b0eca0512f3" kindref="member">value::getrawstring</ref>(){</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>!=<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf486d038f97faf5dcf61fc01919818e45" kindref="member">datatype::_string</ref><sp/>&amp;&amp;<sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>!=<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbff93b52b78e8af4425d60c2854c6faadc" kindref="member">datatype::_unquoted_string</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Wrong<sp/>Datatype&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1cacaa3fe53dbf36861a767d925650618" kindref="member">_string</ref>;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\brief</highlight></codeline>
<codeline lineno="1561"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Gets<sp/>a<sp/>refrence<sp/>to<sp/>the<sp/>raw_array_t<sp/>used<sp/>internally<sp/>to<sp/>store<sp/>the<sp/>array.<sp/>[only<sp/>when<sp/>datatype<sp/>==<sp/>_array]</highlight></codeline>
<codeline lineno="1562"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1563"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>\returns</highlight></codeline>
<codeline lineno="1564"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>raw_array_t<sp/>used<sp/>to<sp/>store<sp/>the<sp/>%JSON<sp/>array.</highlight></codeline>
<codeline lineno="1565"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>WARNING,<sp/>this<sp/>method<sp/>only<sp/>succeeds<sp/>if<sp/>the<sp/>datatype<sp/>of<sp/>\p<sp/>this<sp/>is<sp/>an<sp/>array.</highlight></codeline>
<codeline lineno="1566"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="1567"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>An<sp/>exception<sp/>will<sp/>be<sp/>thrown<sp/>if<sp/>\p<sp/>this<sp/>is<sp/>the<sp/>wrong<sp/>datatype</highlight></codeline>
<codeline lineno="1568"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><ref refid="stdcontainers_8h_14fe8a3fd31df9699d616664bad4be235" kindref="member">raw_array_t</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1value_1f844ddf21e7b3dfa3a76dc95d0d2e5f0" kindref="member">value::getrawarray</ref>(){</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>!=<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Wrong<sp/>Datatype&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\brief</highlight></codeline>
<codeline lineno="1575"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Gets<sp/>a<sp/>refrence<sp/>to<sp/>the<sp/>raw_object_t<sp/>used<sp/>internally<sp/>to<sp/>store<sp/>the<sp/>object.<sp/>[only<sp/>when<sp/>datatype<sp/>==<sp/>_object]</highlight></codeline>
<codeline lineno="1576"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1577"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>\returns</highlight></codeline>
<codeline lineno="1578"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>raw_object_t<sp/>used<sp/>to<sp/>store<sp/>the<sp/>%JSON<sp/>object.</highlight></codeline>
<codeline lineno="1579"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>WARNING,<sp/>this<sp/>method<sp/>only<sp/>succeeds<sp/>if<sp/>the<sp/>datatype<sp/>of<sp/>\p<sp/>this<sp/>is<sp/>a<sp/>object.</highlight></codeline>
<codeline lineno="1580"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="1581"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>An<sp/>exception<sp/>will<sp/>be<sp/>thrown<sp/>if<sp/>\p<sp/>this<sp/>is<sp/>the<sp/>wrong<sp/>datatype</highlight></codeline>
<codeline lineno="1582"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><ref refid="stdcontainers_8h_1ce1309c9afaba2cf388b9425b3d3ef1a" kindref="member">raw_object_t</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1value_1866c618d6fdf890b334b04dccc0f9ca4" kindref="member">value::getrawobject</ref>(){</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>!=<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">datatype::_object</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Wrong<sp/>Datatype&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/></highlight></codeline>
<codeline lineno="1590"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>overloaded<sp/>[]<sp/>functions</highlight></codeline>
<codeline lineno="1592"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1value_15d9d18b8fb3a99ca8b0428ee01dccf4a" kindref="member" tooltip="returns a reference to the array child at index index.">value::operator[]</ref>(<ref refid="types_8h_1af23a2fdba3012f0c512f0fc318512d9" kindref="member">aint</ref><sp/>index){</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>!=<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_170c9d6308c56af1ac1924db85810c4d9" kindref="member" tooltip="Used by any function that should return a reference to a value but may not be able...">nullval</ref>;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_array_t::iterator<sp/>ai=(*this-&gt;<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>).begin();</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>index){</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ai;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ai<sp/>==<sp/>(*this-&gt;<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>).end()){</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>.<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>).push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>());</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(*ai);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1value_15d9d18b8fb3a99ca8b0428ee01dccf4a" kindref="member" tooltip="returns a reference to the array child at index index.">value::operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*name){</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_131ca1af8ecc1ebe01e23590ce7bf7b8c" kindref="member" tooltip="shallow searches for a child value whose name matches name. this must be a JSON object...">getchild</ref>(name);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1value_15d9d18b8fb3a99ca8b0428ee01dccf4a" kindref="member" tooltip="returns a reference to the array child at index index.">value::operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name){</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_131ca1af8ecc1ebe01e23590ce7bf7b8c" kindref="member" tooltip="shallow searches for a child value whose name matches name. this must be a JSON object...">getchild</ref>(name);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1value_146df606bec08917c4e21877430241f70" kindref="member" tooltip="wrapper function for value::addvalue(const value)">value::operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;nval){</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref><sp/>!=<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">datatype::_array</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_1cc4898d3cee6c1e81e491bd7aacc5c3e" kindref="member" tooltip="Adds a copy of newval to the end of the JSON array.">addvalue</ref>(nval);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight></codeline>
    </programlisting>
    <location file="k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/value.cpp"/>
  </compounddef>
</doxygen>
