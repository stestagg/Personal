<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.5">
  <compounddef id="value_8h" kind="file">
    <compoundname>value.h</compoundname>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes refid="types_8h" local="yes">types.h</includes>
    <includedby refid="parser___u_n_i_8h" local="yes">k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/parser_UNI.h</includedby>
    <includedby refid="parser___u_t_f8_8h" local="yes">k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/parser_UTF8.h</includedby>
    <includedby refid="value_8cpp" local="yes">k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/value.cpp</includedby>
    <incdepgraph>
      <node id="164">
        <label>string</label>
      </node>
      <node id="167">
        <label>map</label>
      </node>
      <node id="161">
        <label>k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/value.h</label>
        <link refid="value.h"/>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
      </node>
      <node id="162">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="166">
        <label>stdcontainers.h</label>
        <link refid="stdcontainers_8h"/>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="165">
        <label>string.h</label>
      </node>
      <node id="163">
        <label>types.h</label>
        <link refid="types_8h"/>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="174">
        <label>k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/value.cpp</label>
        <link refid="value_8cpp"/>
      </node>
      <node id="169">
        <label>k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/value.h</label>
        <link refid="value.h"/>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/parser_UNI.h</label>
        <link refid="parser___u_n_i_8h"/>
        <childnode refid="171" relation="include">
        </childnode>
      </node>
      <node id="171">
        <label>k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/parser_UNI.cpp</label>
        <link refid="parser___u_n_i_8cpp"/>
      </node>
      <node id="172">
        <label>k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/parser_UTF8.h</label>
        <link refid="parser___u_t_f8_8h"/>
        <childnode refid="173" relation="include">
        </childnode>
      </node>
      <node id="173">
        <label>k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/parser_UTF8.cpp</label>
        <link refid="parser___u_t_f8_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="union_j_s_o_n_1_1dataptr" prot="public">JSON::dataptr</innerclass>
    <innerclass refid="class_j_s_o_n_1_1value" prot="public">JSON::value</innerclass>
    <innernamespace refid="namespace_j_s_o_n">JSON</innernamespace>
    <innernamespace refid="namespace_j_s_o_n_1_1literals">JSON::literals</innernamespace>
    <innernamespace refid="namespace_j_s_o_n_1_1datatype">JSON::datatype</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>JSON_value_h_INCLUDED</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>JSON_value_h_INCLUDED</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_WINDOWS</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_CRTDBG_MAP_ALLOC</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="16"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">JSON{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">value;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8h" kindref="compound">types.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>defines<sp/>the<sp/>achar<sp/>and<sp/>astr<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">JSON<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="namespace_j_s_o_n_1_1literals" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe" kindref="member" tooltip="the JSON spec names a number of literals that should be recognised. This enum lists...">literals</ref>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe" kindref="member" tooltip="the JSON spec names a number of literals that should be recognised. This enum lists...">literals</ref>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe3662edfe302cacabb01be98caf3efbde" kindref="member">_true</ref>,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe2ea46da5e9fc44900ef40db35d50db76" kindref="member">_false</ref>,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffed8ad8e6e8093104a13330a2e8ea5bbd8" kindref="member">_null</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="namespace_j_s_o_n_1_1datatype" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">datatype{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">dt</ref>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">_undefined</ref>,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf486d038f97faf5dcf61fc01919818e45" kindref="member">_string</ref>,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbff93b52b78e8af4425d60c2854c6faadc" kindref="member">_unquoted_string</ref>,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfd0cd9eeb3409b23a86a4462df6064477" kindref="member">_literal</ref>,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf225c9dd9186f1078a3c8fca477da14eb" kindref="member">_number</ref>,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf60deb81efdaedc097cee89b101c23525" kindref="member">_fixed_number</ref>,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbfce52c7708b9f1aac09bc908806aa4ad7" kindref="member">_array</ref>,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf8af99a824ec4ebbed96b327634aa09f6" kindref="member">_object</ref></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="union_j_s_o_n_1_1dataptr" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_j_s_o_n_1_1dataptr" kindref="compound" tooltip="Used internally to manage pointers to data. You can safely ignore this.">dataptr</ref>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="union_j_s_o_n_1_1dataptr_1a2f9bc4454512a18dc9f17e2de93d867" kindref="member">_v</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>*<ref refid="union_j_s_o_n_1_1dataptr_1cacaa3fe53dbf36861a767d925650618" kindref="member">_string</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe" kindref="member" tooltip="the JSON spec names a number of literals that should be recognised. This enum lists...">literals::literals</ref><sp/><ref refid="union_j_s_o_n_1_1dataptr_17013e85478e2cc8c69bfe9c9b852f878" kindref="member">_literal</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1e762403f037733722b8e9808df502694" kindref="member">afloat</ref><sp/>*<ref refid="union_j_s_o_n_1_1dataptr_1ef75d36b3acaa5b9b293d16995932535" kindref="member">_number</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1af23a2fdba3012f0c512f0fc318512d9" kindref="member">aint</ref><sp/><ref refid="union_j_s_o_n_1_1dataptr_18363f42d49bb85d8dae5efe264f0b71d" kindref="member">_fixed_number</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdcontainers_8h_1ce1309c9afaba2cf388b9425b3d3ef1a" kindref="member">raw_object_t</ref><sp/>*<ref refid="union_j_s_o_n_1_1dataptr_1df3254209607b02a757c597b07555247" kindref="member">_object</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdcontainers_8h_14fe8a3fd31df9699d616664bad4be235" kindref="member">raw_array_t</ref><sp/>*<ref refid="union_j_s_o_n_1_1dataptr_115fcf41e27f4bdd1b8ee7d1c38d9256f" kindref="member">_array</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_j_s_o_n_1_1value" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">datatype::dt</ref><sp/><ref refid="class_j_s_o_n_1_1value_127497b62d6da4f7824d6ab2cf4381c1e" kindref="member">dt</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_j_s_o_n_1_1dataptr" kindref="compound" tooltip="Used internally to manage pointers to data. You can safely ignore this.">dataptr</ref><sp/><ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/><ref refid="class_j_s_o_n_1_1value_170c9d6308c56af1ac1924db85810c4d9" kindref="member" tooltip="Used by any function that should return a reference to a value but may not be able...">nullval</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">datatype::dt</ref><sp/><ref refid="class_j_s_o_n_1_1value_1d08b4c900efc427c06b41a981939393c" kindref="member" tooltip="returns the curent datatype::dt of this value">getdatatype</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_13a9e44d9a1b41d63e77cdf961a4dc664" kindref="member" tooltip="Sets this value to an empty string.">setstring</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_13a9e44d9a1b41d63e77cdf961a4dc664" kindref="member" tooltip="Sets this value to an empty string.">setstring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*newval);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_13a9e44d9a1b41d63e77cdf961a4dc664" kindref="member" tooltip="Sets this value to an empty string.">setstring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::wstring<sp/>&amp;newval);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_13a9e44d9a1b41d63e77cdf961a4dc664" kindref="member" tooltip="Sets this value to an empty string.">setstring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nval);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_13a9e44d9a1b41d63e77cdf961a4dc664" kindref="member" tooltip="Sets this value to an empty string.">setstring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;newval);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_163b5aaae241ca9ca1631b02bd2c127e1" kindref="member" tooltip="Sets this value to an integer JSON Number. The float is not initialised to any specific...">setint</ref>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1befee3582d3174f28a7f1862a7bf9686" kindref="member" tooltip="Sets this value to a floating point JSON Number. The float is not initialised to...">setfloat</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>JSON_NO_int64</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">setnumber</ref>(int64_t<sp/>newval);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">operator=</ref>(int64_t);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">setnumber</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newval);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">setnumber</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>newval);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">setnumber</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newval);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_143a95f326cacfa97355aa6462c83ee45" kindref="member" tooltip="Sets this value to a JSON Literal(literals::literals), and initialises it to null...">setliteral</ref>();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_143a95f326cacfa97355aa6462c83ee45" kindref="member" tooltip="Sets this value to a JSON Literal(literals::literals), and initialises it to null...">setliteral</ref>(<ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe" kindref="member" tooltip="the JSON spec names a number of literals that should be recognised. This enum lists...">literals::literals</ref><sp/>newval);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_143a95f326cacfa97355aa6462c83ee45" kindref="member" tooltip="Sets this value to a JSON Literal(literals::literals), and initialises it to null...">setliteral</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>newval);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_15ec5f1419b16fff3709ad8dc5220fcbf" kindref="member" tooltip="Sets this value to an empty JSON Array.">setarray</ref>();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_15ec5f1419b16fff3709ad8dc5220fcbf" kindref="member" tooltip="Sets this value to an empty JSON Array.">setarray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdcontainers_8h_14fe8a3fd31df9699d616664bad4be235" kindref="member">raw_array_t</ref><sp/>&amp;newval);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_UNSAFE_FUNS</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_15ec5f1419b16fff3709ad8dc5220fcbf" kindref="member" tooltip="Sets this value to an empty JSON Array.">setarray</ref>(<ref refid="stdcontainers_8h_14fe8a3fd31df9699d616664bad4be235" kindref="member">raw_array_t</ref><sp/>*newval);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_15b8f5414f33acb66534cfcb7d6a0d6ac" kindref="member" tooltip="Sets this value to an empty JSON Object.">setobject</ref>(<ref refid="stdcontainers_8h_1ce1309c9afaba2cf388b9425b3d3ef1a" kindref="member">raw_object_t</ref><sp/>*newval);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_15b8f5414f33acb66534cfcb7d6a0d6ac" kindref="member" tooltip="Sets this value to an empty JSON Object.">setobject</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_15b8f5414f33acb66534cfcb7d6a0d6ac" kindref="member" tooltip="Sets this value to an empty JSON Object.">setobject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdcontainers_8h_1ce1309c9afaba2cf388b9425b3d3ef1a" kindref="member">raw_object_t</ref><sp/>&amp;newval);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_18d312e9a28a7a3f931f71bec837f1ad7" kindref="member" tooltip="Deletes the existing value, and sets the value to a new type, as specified by nv...">setdt</ref>(<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">datatype::dt</ref><sp/>nv);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">operator=</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">operator=</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">operator=</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">operator=</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::wstring&amp;);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">operator=</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_1233ef2435ad31fb89146463907910cbd" kindref="member" tooltip="Sets this value to an integer JSON Number.">operator=</ref>(<ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe" kindref="member" tooltip="the JSON spec names a number of literals that should be recognised. This enum lists...">literals::literals</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1cc4898d3cee6c1e81e491bd7aacc5c3e" kindref="member" tooltip="Adds a copy of newval to the end of the JSON array.">addvalue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;newval);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1cc4898d3cee6c1e81e491bd7aacc5c3e" kindref="member" tooltip="Adds a copy of newval to the end of the JSON array.">addvalue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*newname,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;newval);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1cc4898d3cee6c1e81e491bd7aacc5c3e" kindref="member" tooltip="Adds a copy of newval to the end of the JSON array.">addvalue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*newname,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;newval);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_UNSAFE_FUNS</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1cc4898d3cee6c1e81e491bd7aacc5c3e" kindref="member" tooltip="Adds a copy of newval to the end of the JSON array.">addvalue</ref>(<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*newval);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1cc4898d3cee6c1e81e491bd7aacc5c3e" kindref="member" tooltip="Adds a copy of newval to the end of the JSON array.">addvalue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*newname,<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*newval);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1cc4898d3cee6c1e81e491bd7aacc5c3e" kindref="member" tooltip="Adds a copy of newval to the end of the JSON array.">addvalue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*newname,<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*newval);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1ad8500f20d470799ec32d440bbe77256" kindref="member" tooltip="Looks to see if this value [must be array or object] contains the value pointed to...">deletechild</ref>(<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*<ref refid="class_j_s_o_n_1_1value_135c0319d8ab716876096ce8e1a0ec71d" kindref="member">val</ref>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1ad8500f20d470799ec32d440bbe77256" kindref="member" tooltip="Looks to see if this value [must be array or object] contains the value pointed to...">deletechild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1ad8500f20d470799ec32d440bbe77256" kindref="member" tooltip="Looks to see if this value [must be array or object] contains the value pointed to...">deletechild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_131ca1af8ecc1ebe01e23590ce7bf7b8c" kindref="member" tooltip="shallow searches for a child value whose name matches name. this must be a JSON object...">getchild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<sp/><ref refid="class_j_s_o_n_1_1value_131ca1af8ecc1ebe01e23590ce7bf7b8c" kindref="member" tooltip="shallow searches for a child value whose name matches name. this must be a JSON object...">getchild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*<ref refid="class_j_s_o_n_1_1value_183084f869fd06f99f5974135c0418f45" kindref="member" tooltip="shallow searches for a child that aval points to. this must be a JSON array.">childexists</ref>(<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*val);<sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*<ref refid="class_j_s_o_n_1_1value_183084f869fd06f99f5974135c0418f45" kindref="member" tooltip="shallow searches for a child that aval points to. this must be a JSON array.">childexists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*<ref refid="class_j_s_o_n_1_1value_183084f869fd06f99f5974135c0418f45" kindref="member" tooltip="shallow searches for a child that aval points to. this must be a JSON array.">childexists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>*<ref refid="class_j_s_o_n_1_1value_183084f869fd06f99f5974135c0418f45" kindref="member" tooltip="shallow searches for a child that aval points to. this must be a JSON array.">childexists</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ofs);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1456130bc7bac52d3ec777d943a733475" kindref="member" tooltip="returns a bool representing the current value of this ">getbool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_default=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe" kindref="member" tooltip="the JSON spec names a number of literals that should be recognised. This enum lists...">JSON::literals::literals</ref><sp/><ref refid="class_j_s_o_n_1_1value_16a82866b5e34cf74d6e2a01e0d761eb6" kindref="member" tooltip="returns a literals::literals representing the current value of this ">getliteral</ref>(<ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe" kindref="member" tooltip="the JSON spec names a number of literals that should be recognised. This enum lists...">JSON::literals::literals</ref><sp/>_default=<ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffed8ad8e6e8093104a13330a2e8ea5bbd8" kindref="member">literals::_null</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1af23a2fdba3012f0c512f0fc318512d9" kindref="member">aint</ref><sp/><ref refid="class_j_s_o_n_1_1value_1f512893b13b6391a749a328480546ae3" kindref="member" tooltip="returns an integer representing the current value of this ">getinteger</ref>(<ref refid="types_8h_1af23a2fdba3012f0c512f0fc318512d9" kindref="member">aint</ref><sp/>_default=0);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1e762403f037733722b8e9808df502694" kindref="member">afloat</ref><sp/><ref refid="class_j_s_o_n_1_1value_102e43a565df0fb16a89d9042aa4d0a06" kindref="member" tooltip="returns a float representing the current value of this ">getfloat</ref>(<ref refid="types_8h_1e762403f037733722b8e9808df502694" kindref="member">afloat</ref><sp/>_default=0);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::wstring<sp/>&amp;<ref refid="class_j_s_o_n_1_1value_1b06b41aaeea6bde872f6a78fd4656c1f" kindref="member" tooltip="fills dest with the string representation of the current value of this ">getstring</ref>(std::wstring<sp/>&amp;dest,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enquote=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>newline=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>&amp;<ref refid="class_j_s_o_n_1_1value_1b06b41aaeea6bde872f6a78fd4656c1f" kindref="member" tooltip="fills dest with the string representation of the current value of this ">getstring</ref>(std::string<sp/>&amp;dest,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enquote=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>newline=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1value_11ec3c8be169fe9e771cf2b0eca0512f3" kindref="member">getrawstring</ref>();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdcontainers_8h_14fe8a3fd31df9699d616664bad4be235" kindref="member">raw_array_t</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1value_1f844ddf21e7b3dfa3a76dc95d0d2e5f0" kindref="member">getrawarray</ref>();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdcontainers_8h_1ce1309c9afaba2cf388b9425b3d3ef1a" kindref="member">raw_object_t</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1value_1866c618d6fdf890b334b04dccc0f9ca4" kindref="member">getrawobject</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_1b5682c6c4c6d674784d477907db0f002" kindref="member" tooltip="Removes and deletes all child values of this array or object.">clear</ref>();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1value_15d9d18b8fb3a99ca8b0428ee01dccf4a" kindref="member" tooltip="returns a reference to the array child at index index.">operator[]</ref>(<ref refid="types_8h_1af23a2fdba3012f0c512f0fc318512d9" kindref="member">aint</ref><sp/>index);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1value_15d9d18b8fb3a99ca8b0428ee01dccf4a" kindref="member" tooltip="returns a reference to the array child at index index.">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1value_15d9d18b8fb3a99ca8b0428ee01dccf4a" kindref="member" tooltip="returns a reference to the array child at index index.">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1value_146df606bec08917c4e21877430241f70" kindref="member" tooltip="wrapper function for value::addvalue(const value)">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;nval);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_19a47f0d7f25e91d85a909348d4af3b3d" kindref="member" tooltip="Deletes the data held in this value,(same as setting the datatype to undefined).">deletevalue</ref>();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value_12d179b8969c45786200dae9d5d67a382" kindref="member" tooltip="Sets this value to be an exact copy of the data in another value. Recursively copying...">clone</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;oldval);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">value</ref><sp/>&amp;nv);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nval);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nval);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nval);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nval);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>JSON_NO_int64</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>(int64_t<sp/>nval);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nval);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*nval);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>(<ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe" kindref="member" tooltip="the JSON spec names a number of literals that should be recognised. This enum lists...">literals::literals</ref><sp/>nval);<sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nval);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>(std::string<sp/>nval);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>(std::wstring<sp/>nval);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_19b3a141b79ff268afa6cd30e677e28f1" kindref="member" tooltip="Basic constructor. Initialises a JSON value to the &amp;#39;undefined&amp;#39; datatype.">value</ref>(<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf" kindref="member" tooltip="the different datatypes that a value can hold.">datatype::dt</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value_1f7fe992dab5a79da320b60c7768238fe" kindref="member" tooltip="Destructor, will handle freeing all memory associated with this value.">~value</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/value.h"/>
  </compounddef>
</doxygen>
