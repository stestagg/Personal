<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.5">
  <compounddef id="parser___u_t_f8_8cpp" kind="file">
    <compoundname>parser_UTF8.cpp</compoundname>
    <includes refid="parser___u_t_f8_8h" local="yes">parser_UTF8.h</includes>
    <includes refid="convert_8h" local="yes">convert.h</includes>
    <includes refid="parser__errors_8h" local="yes">parser_errors.h</includes>
    <incdepgraph>
      <node id="93">
        <label>parser_errors.h</label>
        <link refid="parser__errors_8h"/>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>string</label>
      </node>
      <node id="90">
        <label>map</label>
      </node>
      <node id="85">
        <label>value.h</label>
        <link refid="value_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="89">
        <label>stdcontainers.h</label>
        <link refid="stdcontainers_8h"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>convert.h</label>
        <link refid="convert_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>string.h</label>
      </node>
      <node id="86">
        <label>types.h</label>
        <link refid="types_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>vector</label>
      </node>
      <node id="83">
        <label>parser_UTF8.h</label>
        <link refid="parser___u_t_f8_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/parser_UTF8.cpp</label>
        <link refid="parser_UTF8.cpp"/>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="parser___u_t_f8_8cpp_166b93420f5be52facf9bd3342e8b8bca" prot="public" static="no">
        <name>US</name>
        <param><defname>x</defname></param>
        <initializer>((const unsigned char *)(x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/parser_UTF8.cpp" line="160" bodyfile="k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/parser_UTF8.cpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="parser___u_t_f8_8cpp_1932a8223df97b0a70a82aeb1a96ca46c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref> &amp;</type>
        <definition>astr&amp; createrandomname</definition>
        <argsstring>(astr &amp;str)</argsstring>
        <name>createrandomname</name>
        <param>
          <type><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Creates a pseudorandom object name. Used for parsing malformed input. </para>        </briefdescription>
        <detaileddescription>
<para>In the case where an object has a value with no name, this function is called to give it one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/parser_UTF8.cpp" line="591" bodyfile="k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/parser_UTF8.cpp" bodystart="591" bodyend="602"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parser___u_t_f8_8h" kindref="compound">parser_UTF8.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="convert_8h" kindref="compound">convert.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parser__errors_8h" kindref="compound">parser_errors.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">JSON;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>utf8buffer<sp/>functions</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="19"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_1d0baae239062e2d4a8160dff01f234fe" kindref="member" tooltip="unmaps and forgets about buffer">utf8buffer::unmap</ref>(){</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_j_s_o_n_1_1utf8buffer_1e8d9d68f19d45293254ba9675000374c" kindref="member">mapping</ref>){</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1mapping__techniques_194855cb07b9956e515b1612e2a1fc0e79c164ca133fa3cd68352cb26b927f885" kindref="member">mapping_techniques::unmapped</ref>:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1mapping__techniques_194855cb07b9956e515b1612e2a1fc0e7799422a07b76eff818c857d1212b0d9b" kindref="member">mapping_techniques::direct</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_11f4fb8cba4bae4a01e46350525856b09" kindref="member">bfr</ref>=0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>=0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>=0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_1dc814f68e9bb1e2ed10135496cf61ba4" kindref="member">len</ref>=0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_1e8d9d68f19d45293254ba9675000374c" kindref="member">mapping</ref><sp/>=<sp/><ref refid="namespace_j_s_o_n_1_1mapping__techniques_194855cb07b9956e515b1612e2a1fc0e79c164ca133fa3cd68352cb26b927f885" kindref="member">mapping_techniques::unmapped</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1mapping__techniques_194855cb07b9956e515b1612e2a1fc0e7ab917a74e08d4452ea955d525f92a4f5" kindref="member">mapping_techniques::mmap</ref>:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>JSON_WINDOWS</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnmapViewOfFile(mmap_data.view);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(mmap_data.map);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(mmap_data.file);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>JSON_POSIX</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>munmap((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<ref refid="class_j_s_o_n_1_1utf8buffer_11f4fb8cba4bae4a01e46350525856b09" kindref="member">bfr</ref>,<ref refid="class_j_s_o_n_1_1utf8buffer_1dc814f68e9bb1e2ed10135496cf61ba4" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(mmap_data.file);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>get<sp/>here,<sp/>then<sp/>we<sp/>can<sp/>assume<sp/>an<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="class_j_s_o_n_1_1utf8buffer_18014bdb74f799eff6e20720a15b7403a" kindref="member" tooltip="The destructor will try to unmap the buffer if it can.">utf8buffer::~utf8buffer</ref>(){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_1d0baae239062e2d4a8160dff01f234fe" kindref="member" tooltip="unmaps and forgets about buffer">unmap</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_WINDOWS</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="60"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_14b24e4a3768de21c47f9195f135d089e" kindref="member">utf8buffer::mapfile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmap_data.file=CreateFileA(fn,<sp/>GENERIC_READ,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>OPEN_EXISTING,<sp/><sp/>FILE_ATTRIBUTE_NORMAL,<sp/><sp/>0);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Failed<sp/>to<sp/>Open<sp/>file..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mmap_data.file==INVALID_HANDLE_VALUE){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LARGE_INTEGER<sp/>ifs;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetFileSizeEx(mmap_data.file,&amp;ifs);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>File<sp/>too<sp/>large<sp/>(&lt;<sp/>0xffffffff)<sp/>-<sp/>TBH,<sp/>a<sp/>file<sp/>this<sp/>size<sp/>prob<sp/>won&apos;t<sp/>fit<sp/>into<sp/>ram<sp/>anyway.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>fix<sp/>this<sp/>limitation,<sp/>write<sp/>better<sp/>code<sp/>for<sp/>sequential<sp/>mapping.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifs.HighPart&lt;0){<sp/>CloseHandle(mmap_data.file);<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmap_data.map=CreateFileMapping(<sp/>mmap_data.file,<sp/>NULL,PAGE_READONLY,<sp/><sp/>0,<sp/><sp/>0,NULL);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mmap_data.map)<sp/>{CloseHandle(mmap_data.file);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmap_data.view=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)MapViewOfFile(mmap_data.map,FILE_MAP_READ,0,0,0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mmap_data.view)<sp/>{<sp/>CloseHandle(mmap_data.map);<sp/>CloseHandle(mmap_data.file);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_1e8d9d68f19d45293254ba9675000374c" kindref="member">mapping</ref>=<ref refid="namespace_j_s_o_n_1_1mapping__techniques_194855cb07b9956e515b1612e2a1fc0e7ab917a74e08d4452ea955d525f92a4f5" kindref="member">mapping_techniques::mmap</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>=<sp/><ref refid="class_j_s_o_n_1_1utf8buffer_11f4fb8cba4bae4a01e46350525856b09" kindref="member">bfr</ref><sp/>=<sp/>mmap_data.view;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_1dc814f68e9bb1e2ed10135496cf61ba4" kindref="member">len</ref><sp/>=<sp/>ifs.LowPart;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref><sp/>=<sp/><ref refid="class_j_s_o_n_1_1utf8buffer_11f4fb8cba4bae4a01e46350525856b09" kindref="member">bfr</ref><sp/>+<sp/><ref refid="class_j_s_o_n_1_1utf8buffer_1dc814f68e9bb1e2ed10135496cf61ba4" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_POSIX</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="92"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_14b24e4a3768de21c47f9195f135d089e" kindref="member">utf8buffer::mapfile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data=0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>sbuf;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat(fn,<sp/>&amp;sbuf)<sp/>==<sp/>-1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmap_data.file<sp/>=<sp/>open(fn,<sp/>O_RDONLY);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mmap_data.file<sp/>==<sp/>-1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>nd;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/><ref refid="namespace_j_s_o_n_1_1mapping__techniques_194855cb07b9956e515b1612e2a1fc0e7ab917a74e08d4452ea955d525f92a4f5" kindref="member">mmap</ref>((caddr_t)0,<sp/>sbuf.st_size,<sp/>PROT_READ,<sp/>MAP_SHARED,<sp/>mmap_data.file,<sp/>0);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data==0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>nd;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_1e8d9d68f19d45293254ba9675000374c" kindref="member">mapping</ref>=<ref refid="namespace_j_s_o_n_1_1mapping__techniques_194855cb07b9956e515b1612e2a1fc0e7ab917a74e08d4452ea955d525f92a4f5" kindref="member">mapping_techniques::mmap</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>=<sp/><ref refid="class_j_s_o_n_1_1utf8buffer_11f4fb8cba4bae4a01e46350525856b09" kindref="member">bfr</ref><sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)data;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_1dc814f68e9bb1e2ed10135496cf61ba4" kindref="member">len</ref><sp/>=<sp/>sbuf.st_size;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref><sp/>=<sp/><ref refid="class_j_s_o_n_1_1utf8buffer_11f4fb8cba4bae4a01e46350525856b09" kindref="member">bfr</ref><sp/>+<sp/><ref refid="class_j_s_o_n_1_1utf8buffer_1dc814f68e9bb1e2ed10135496cf61ba4" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nd:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data)<sp/>munmap(data,sbuf.st_size);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mmap_data.file&gt;0)<sp/>close(mmap_data.file);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_14b24e4a3768de21c47f9195f135d089e" kindref="member">utf8buffer::mapfile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*fn){</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ln;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cfn<sp/>=<sp/><ref refid="namespace_j_s_o_n_1_1convert_17b80069ac76d617a2c7933cfa9df2833" kindref="member">convert::tochar</ref>(fn,wcslen(fn),ln);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/><ref refid="class_j_s_o_n_1_1utf8buffer_14b24e4a3768de21c47f9195f135d089e" kindref="member">mapfile</ref>(cfn);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>cfn;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="136"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_104f86b32071c7ee2ef4174d3d3228307" kindref="member" tooltip="sets up the buffer to read from the string buf. The buffer reads buf directly, so...">utf8buffer::mapstring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf){</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>strlen(buf);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_113c5863c01fdd1b9e6fd66820e9e778b" kindref="member" tooltip="maps a binary or un-zero-terminated string. See mapstring for more info">mapchararray</ref>(buf,len);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_113c5863c01fdd1b9e6fd66820e9e778b" kindref="member" tooltip="maps a binary or un-zero-terminated string. See mapstring for more info">utf8buffer::mapchararray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len){</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>=<sp/><ref refid="class_j_s_o_n_1_1utf8buffer_11f4fb8cba4bae4a01e46350525856b09" kindref="member">bfr</ref><sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref><sp/>=<sp/><ref refid="class_j_s_o_n_1_1utf8buffer_11f4fb8cba4bae4a01e46350525856b09" kindref="member">bfr</ref><sp/>+<sp/>len;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;len<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1utf8buffer_1e8d9d68f19d45293254ba9675000374c" kindref="member">mapping</ref><sp/>=<sp/><ref refid="namespace_j_s_o_n_1_1mapping__techniques_194855cb07b9956e515b1612e2a1fc0e7799422a07b76eff818c857d1212b0d9b" kindref="member">mapping_techniques::direct</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//which<sp/>idiot<sp/>decided<sp/>that<sp/>char<sp/>would<sp/>be<sp/>signed???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>US(x)<sp/>((const<sp/>unsigned<sp/>char<sp/>*)(x))</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="168"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_19ec1e0f0c9040ae2d73d2051d94546e6" kindref="member" tooltip="This function will increment test IF it is a UTF-8 whitespace char.">parser_UTF8::charskipWS</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>test,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len){</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//static<sp/>const<sp/>char<sp/>WS1[4]<sp/>=<sp/>{<sp/>(char)0x09,<sp/>(char)0x0B,<sp/>(char)0x0C,<sp/>(char)0x20<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(**test<sp/>&gt;<sp/>0x08<sp/>&amp;&amp;<sp/>**test<sp/>&lt;<sp/>0x0E){</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<sp/>*test;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(**test<sp/>==<sp/>0x20){</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<sp/>*test;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*<ref refid="parser___u_t_f8_8cpp_166b93420f5be52facf9bd3342e8b8bca" kindref="member">US</ref>(*test))<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0xC2){</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="parser___u_t_f8_8cpp_166b93420f5be52facf9bd3342e8b8bca" kindref="member">US</ref>(*test+1)<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0xA0){</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*test<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="parser___u_t_f8_8cpp_166b93420f5be52facf9bd3342e8b8bca" kindref="member">US</ref>(*test)<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0xE1){</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((*<ref refid="parser___u_t_f8_8cpp_166b93420f5be52facf9bd3342e8b8bca" kindref="member">US</ref>(*test+1))<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0x9A<sp/>)<sp/>&amp;&amp;<sp/>((*<ref refid="parser___u_t_f8_8cpp_166b93420f5be52facf9bd3342e8b8bca" kindref="member">US</ref>(*test+2))<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0x80))</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||(((*<ref refid="parser___u_t_f8_8cpp_166b93420f5be52facf9bd3342e8b8bca" kindref="member">US</ref>(*test+1))<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0xA0<sp/>)<sp/>&amp;&amp;<sp/>((*<ref refid="parser___u_t_f8_8cpp_166b93420f5be52facf9bd3342e8b8bca" kindref="member">US</ref>(*test+2))<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0x8E))</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*test<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="parser___u_t_f8_8cpp_166b93420f5be52facf9bd3342e8b8bca" kindref="member">US</ref>(*test)<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0xE2){</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((*(*test+1))<sp/>==<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0x80)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;(</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((*<ref refid="parser___u_t_f8_8cpp_166b93420f5be52facf9bd3342e8b8bca" kindref="member">US</ref>(*test+2))<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0x80)<sp/>&amp;&amp;<sp/>((*<ref refid="parser___u_t_f8_8cpp_166b93420f5be52facf9bd3342e8b8bca" kindref="member">US</ref>(*test+2))<sp/>&lt;=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0x8A))</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/><sp/><sp/><sp/><sp/>((*<ref refid="parser___u_t_f8_8cpp_166b93420f5be52facf9bd3342e8b8bca" kindref="member">US</ref>(*test+2))<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0xA8)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/><sp/><sp/><sp/><sp/>((*<ref refid="parser___u_t_f8_8cpp_166b93420f5be52facf9bd3342e8b8bca" kindref="member">US</ref>(*test+2))<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0xA9)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/><sp/><sp/><sp/><sp/>((*<ref refid="parser___u_t_f8_8cpp_166b93420f5be52facf9bd3342e8b8bca" kindref="member">US</ref>(*test+2))<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0xAF)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>||<sp/>(</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((*<ref refid="parser___u_t_f8_8cpp_166b93420f5be52facf9bd3342e8b8bca" kindref="member">US</ref>(*test+1))<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0x81)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><sp/>((*<ref refid="parser___u_t_f8_8cpp_166b93420f5be52facf9bd3342e8b8bca" kindref="member">US</ref>(*test+2))<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0x9F)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*test<sp/>+=<sp/>3;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="parser___u_t_f8_8cpp_166b93420f5be52facf9bd3342e8b8bca" kindref="member">US</ref>(*test)<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0xE3){</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/><sp/>*((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*)(*test<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)0x8080){</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*test<sp/>+=<sp/>3;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_15f6e6c4ecce0d9c741265cab0335c2b0" kindref="member" tooltip="This function will increment test IF it is a UTF-8 eol char.">parser_UTF8::charskipEOL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**test,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len){</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>**test;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((a==0x0A)<sp/>||<sp/>(a==0x0D)){<sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*test++;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>3)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b=*(*test<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c=*(*test<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>!=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0xE2)<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>!=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0x80)<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)0xA8<sp/>||<sp/>c<sp/>==<sp/>(char)0xA9){</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*test<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_14b6b6df8920ae1eb798d2fb3ee58bfd8" kindref="member" tooltip="This function will test if test COULD be part of a standard number.">parser_UTF8::charisNumeric</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>test){</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test&gt;=</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>test&lt;=</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test==</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>||<sp/>test==</highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test==</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test==</highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test==</highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_13d7c3afa269d5a0d5ce7850834456ee2" kindref="member" tooltip="Tries to decode an escaped hex code of the form \xFF.">parser_UTF8::readhexcode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*str,std::string<sp/>&amp;dst){</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a,b;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a=<ref refid="class_j_s_o_n_1_1parser___u_t_f8_15daf7deff5ac8c6643c6a948c2557941" kindref="member" tooltip="converts a hex character into a binary number. Takes a wchar_t in the range: 0-9...">hextoint</ref>(*str);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b=<ref refid="class_j_s_o_n_1_1parser___u_t_f8_15daf7deff5ac8c6643c6a948c2557941" kindref="member" tooltip="converts a hex character into a binary number. Takes a wchar_t in the range: 0-9...">hextoint</ref>(*(str+1));</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&lt;<sp/>0<sp/>||<sp/>b<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>+=<sp/>((char)(a&lt;&lt;4)<sp/>+b);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d6b4bbfea526863b47b6bddc7f78a31c" kindref="member" tooltip="Tries to decode an escaped hex code of the form \uFFFF.">parser_UTF8::readhexquad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*str,std::string<sp/>&amp;dst){</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a,b,c,d;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a=<ref refid="class_j_s_o_n_1_1parser___u_t_f8_15daf7deff5ac8c6643c6a948c2557941" kindref="member" tooltip="converts a hex character into a binary number. Takes a wchar_t in the range: 0-9...">hextoint</ref>(*str);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b=<ref refid="class_j_s_o_n_1_1parser___u_t_f8_15daf7deff5ac8c6643c6a948c2557941" kindref="member" tooltip="converts a hex character into a binary number. Takes a wchar_t in the range: 0-9...">hextoint</ref>(*(str+1));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c=<ref refid="class_j_s_o_n_1_1parser___u_t_f8_15daf7deff5ac8c6643c6a948c2557941" kindref="member" tooltip="converts a hex character into a binary number. Takes a wchar_t in the range: 0-9...">hextoint</ref>(*(str+2));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d=<ref refid="class_j_s_o_n_1_1parser___u_t_f8_15daf7deff5ac8c6643c6a948c2557941" kindref="member" tooltip="converts a hex character into a binary number. Takes a wchar_t in the range: 0-9...">hextoint</ref>(*(str+3));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a&lt;0<sp/>||<sp/>b&lt;0<sp/>||<sp/>c&lt;0<sp/>||<sp/>d&lt;0){</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst+=</highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>tmp[2];</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp[0]=<sp/>(a&lt;&lt;12)<sp/>+<sp/>(b&lt;&lt;8)<sp/>+<sp/>(c&lt;&lt;4)<sp/>+<sp/>d;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp[1]=L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>olen;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmpb=<ref refid="namespace_j_s_o_n_1_1convert_17b80069ac76d617a2c7933cfa9df2833" kindref="member">convert::tochar</ref>(tmp,1,olen);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst.append(tmpb,olen);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tmpb;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_15daf7deff5ac8c6643c6a948c2557941" kindref="member" tooltip="converts a hex character into a binary number. Takes a wchar_t in the range: 0-9...">parser_UTF8::hextoint</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hexchar){</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hexchar<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>hexchar<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hexchar-</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hexchar<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>hexchar<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>10+(hexchar-</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hexchar<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>hexchar<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>10+(hexchar-</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_127d9c721c94772dbc41abf6adb0b97c0" kindref="member" tooltip="copy a string, decoding escaped chars. The string *strstart ... *strend, will be...">parser_UTF8::parseEscapes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*strstart,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*strend,<sp/><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>&amp;rv){</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tmpstr;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*escseg;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(escseg<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)memchr(strstart,</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,strend-strstart)){</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpstr.append(strstart,escseg<sp/>-<sp/>strstart);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strstart<sp/>=<sp/>escseg+1;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">((*strstart)){</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/>tmpstr+=</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">;++strstart;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpstr+=</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;++strstart;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpstr+=</highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">;++strstart;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpstr+=0x08;++strstart;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpstr+=0x09;++strstart;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpstr+=0x0A;++strstart;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpstr+=0x0B;++strstart;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpstr+=0x0C;++strstart;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpstr+=0x0D;++strstart;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++strstart;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strend<sp/>-strstart<sp/>&lt;<sp/>2){</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(2);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_j_s_o_n_1_1parser___u_t_f8_13d7c3afa269d5a0d5ce7850834456ee2" kindref="member" tooltip="Tries to decode an escaped hex code of the form \xFF.">readhexcode</ref>(strstart,tmpstr)){</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(2);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strstart+=2;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++strstart;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strend<sp/>-strstart<sp/><sp/>&lt;<sp/>4){</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(3);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d6b4bbfea526863b47b6bddc7f78a31c" kindref="member" tooltip="Tries to decode an escaped hex code of the form \uFFFF.">readhexquad</ref>(strstart,tmpstr)){</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(3);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strstart+=4;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpstr+=</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpstr.append(strstart,strend);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_j_s_o_n_1_1convert_133538051b74c13bee55515c7c0529068" kindref="member">convert::toastr</ref>(rv,tmpstr);</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1111fd36185edc9a552acb41b5e82daee" kindref="member">parser_UTF8::readunquotedstring</ref>(<ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>&amp;rv){</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv=<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*strstart<sp/>=<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*strend<sp/>=<sp/>strstart;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="class_j_s_o_n_1_1parser___u_t_f8_19ec1e0f0c9040ae2d73d2051d94546e6" kindref="member" tooltip="This function will increment test IF it is a UTF-8 whitespace char.">charskipWS</ref>(&amp;<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>,<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref><sp/>-<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>)){</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strend=<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>){</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_127d9c721c94772dbc41abf6adb0b97c0" kindref="member" tooltip="copy a string, decoding escaped chars. The string *strstart ... *strend, will be...">parseEscapes</ref>(strstart,strend,rv);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_18f26f14d15b59838efb1c75380006513" kindref="member" tooltip="Reads a string from the input buffer and parses the esape chars. rv is set to the...">parser_UTF8::readstring</ref>(<ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>&amp;rv){</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv=<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*strstart=<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z=0;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*strend;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(z==0<sp/>||<sp/>*(strend-1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z=1;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strend<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)memchr(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>,</highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">,<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref><sp/>-<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strend<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strend<sp/>=<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(1);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>=<sp/>strend+1;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_127d9c721c94772dbc41abf6adb0b97c0" kindref="member" tooltip="copy a string, decoding escaped chars. The string *strstart ... *strend, will be...">parseEscapes</ref>(strstart,strend,rv);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_147c6ac30926aa72be75be6f60e9757f3" kindref="member" tooltip="Reads a JSON Literal from the input buffer and sets rv to it&amp;#39;s value.">parser_UTF8::readlit</ref>(<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">JSON::value</ref><sp/>&amp;rv){</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*orig<sp/>=<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>kk<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>){</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref><sp/>-<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>&lt;<sp/>3){</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kk<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>,</highlight><highlight class="stringliteral">&quot;rue&quot;</highlight><highlight class="normal">,3)<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kk<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe3662edfe302cacabb01be98caf3efbde" kindref="member">JSON::literals::_true</ref>;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kk=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref><sp/>-<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>&lt;<sp/>4){</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kk<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>,</highlight><highlight class="stringliteral">&quot;alse&quot;</highlight><highlight class="normal">,4)<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kk<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffe2ea46da5e9fc44900ef40db35d50db76" kindref="member">JSON::literals::_false</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kk=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref><sp/>-<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>&lt;<sp/>3){</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kk<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>,</highlight><highlight class="stringliteral">&quot;ull&quot;</highlight><highlight class="normal">,3)<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kk<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/><ref refid="namespace_j_s_o_n_1_1literals_1890bab9f08fdadf93949c1d18191cffed8ad8e6e8093104a13330a2e8ea5bbd8" kindref="member">JSON::literals::_null</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kk=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kk){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>=<sp/>orig;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_116d5e391f6d4bb04fd4812ebe9a280fe" kindref="member" tooltip="Reads an ECMAScript conformant number from the input buffer.">parser_UTF8::readnum</ref>(<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">JSON::value</ref><sp/>&amp;rv){</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flt=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*strt<sp/>=<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1a7fe13e71520efe7478188af6f836d1f" kindref="member" tooltip="Has error e been raised yet? for the list of errors, see: parser_errors.cpp.">fail</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_14b6b6df8920ae1eb798d2fb3ee58bfd8" kindref="member" tooltip="This function will test if test COULD be part of a standard number.">charisNumeric</ref>(*(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>))){</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>||<sp/>*(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal"><sp/>||<sp/>*(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">){flt=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>-<sp/>strt;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmpbuf<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[len<sp/>+1];</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(tmpbuf,strt,len);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpbuf[len]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flt){</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nd;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>strtod(tmpbuf,&amp;nd);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nd<sp/>!=<sp/>tmpbuf+len)<sp/>fail=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv.<ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">setnumber</ref>(v);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1af23a2fdba3012f0c512f0fc318512d9" kindref="member">aint</ref><sp/>v;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nd;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v=<ref refid="types_8h_1888ed67715379064f3e9f72242fefff0" kindref="member">strtoaint</ref>(tmpbuf,&amp;nd,10);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nd<sp/>!=<sp/>tmpbuf+len)<sp/>fail=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv.<ref refid="class_j_s_o_n_1_1value_16074f585985cf33e6d4f3e5163d33a4d" kindref="member" tooltip="Sets this value to an integer JSON Number.">setnumber</ref>(v);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tmpbuf;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!fail;</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b6bf72aed403690c9db7eb159268ad21" kindref="member" tooltip="This function looks for, and skips over any whitespace or comments under the input...">parser_UTF8::skipWS</ref>(){</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cont=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cont){</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cont=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_19ec1e0f0c9040ae2d73d2051d94546e6" kindref="member" tooltip="This function will increment test IF it is a UTF-8 whitespace char.">charskipWS</ref>(&amp;<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>,<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>-<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>)){cont=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>&gt;=<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>&gt;=<sp/>here,<sp/>just<sp/>in<sp/>case<sp/>:)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref><sp/>-<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>&lt;<sp/>2)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>+1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cont=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>+=2;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!<ref refid="class_j_s_o_n_1_1parser___u_t_f8_15f6e6c4ecce0d9c741265cab0335c2b0" kindref="member" tooltip="This function will increment test IF it is a UTF-8 eol char.">charskipEOL</ref>(&amp;<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>,<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>-<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>)){</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>&gt;=<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>&gt;=<sp/>here,<sp/>just<sp/>in<sp/>case<sp/>:)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>+1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cont=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>+1)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*eptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)memchr(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>+2,</highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">,<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref><sp/>-<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eptr<sp/>==<sp/>0<sp/><sp/>||<sp/>eptr<sp/>&gt;=<sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref><sp/>-1)){<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(4);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>=eptr;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>&amp;<ref refid="parser___u_n_i_8cpp_1932a8223df97b0a70a82aeb1a96ca46c" kindref="member" tooltip="Creates a pseudorandom object name. Used for parsing malformed input.">createrandomname</ref>(<ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref>&amp;<sp/>str){</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str=<ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;!anon_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;10;++i){</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(rand()<sp/>&amp;<sp/>0x1)<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>rand()<sp/>%<sp/>10;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str+=</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>(char)num;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>(char)(<sp/>rand()<sp/>%<sp/>24<sp/>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_17f390bac9b1df96640acfb3ced3f608f" kindref="member" tooltip="Reads an array from the input stream into rv.">parser_UTF8::readarray</ref>(<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">JSON::value</ref><sp/>&amp;rv){</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv.<ref refid="class_j_s_o_n_1_1value_15ec5f1419b16fff3709ad8dc5220fcbf" kindref="member" tooltip="Sets this value to an empty JSON Array.">setarray</ref>();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1){</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">JSON::value</ref><sp/>curval;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b6bf72aed403690c9db7eb159268ad21" kindref="member" tooltip="This function looks for, and skips over any whitespace or comments under the input...">skipWS</ref>();</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>&gt;=<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>){</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(5);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first!=</highlight><highlight class="keyword">true</highlight><highlight class="normal">){<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(8);}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b6bf72aed403690c9db7eb159268ad21" kindref="member" tooltip="This function looks for, and skips over any whitespace or comments under the input...">skipWS</ref>();</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>&gt;=<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>){</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(5);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b6bf72aed403690c9db7eb159268ad21" kindref="member" tooltip="This function looks for, and skips over any whitespace or comments under the input...">skipWS</ref>();</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>){</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(5);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d46ff8757c23da4275dce8db69a135b7" kindref="member" tooltip="Works out the type of, and then reads a value from the input stream into rv.">getvalue</ref>(curval);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curval.<ref refid="class_j_s_o_n_1_1value_1d08b4c900efc427c06b41a981939393c" kindref="member" tooltip="returns the curent datatype::dt of this value">getdatatype</ref>()<sp/>==<sp/><ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">datatype::_undefined</ref><sp/>&amp;&amp;<sp/>*(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>)!=</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(8);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv.<ref refid="class_j_s_o_n_1_1value_1cc4898d3cee6c1e81e491bd7aacc5c3e" kindref="member" tooltip="Adds a copy of newval to the end of the JSON array.">addvalue</ref>(curval);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1327b5ededdd7095bc7bfb05d6d99bdf1" kindref="member" tooltip="Reads an object from the input stream into rv.">parser_UTF8::readobject</ref>(<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">JSON::value</ref><sp/>&amp;rv){</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv.<ref refid="class_j_s_o_n_1_1value_137a67c4d6f86ca8882173cae8e7c0c9c" kindref="member" tooltip="THIS METHOD IS DANGEROUS.">setobject</ref>();</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1){</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>curname;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">JSON::value</ref><sp/>curval;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b6bf72aed403690c9db7eb159268ad21" kindref="member" tooltip="This function looks for, and skips over any whitespace or comments under the input...">skipWS</ref>();</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>&gt;=<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>){</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(5);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first!=</highlight><highlight class="keyword">true</highlight><highlight class="normal">){<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(8);}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b6bf72aed403690c9db7eb159268ad21" kindref="member" tooltip="This function looks for, and skips over any whitespace or comments under the input...">skipWS</ref>();</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>&gt;=<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>){</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(5);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(6);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="parser___u_n_i_8cpp_1932a8223df97b0a70a82aeb1a96ca46c" kindref="member" tooltip="Creates a pseudorandom object name. Used for parsing malformed input.">createrandomname</ref>(curname);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_18f26f14d15b59838efb1c75380006513" kindref="member" tooltip="Reads a string from the input buffer and parses the esape chars. rv is set to the...">readstring</ref>(curname);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>){</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(5);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1111fd36185edc9a552acb41b5e82daee" kindref="member">readunquotedstring</ref>(curname);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//adderror(11);<sp/>//<sp/>While<sp/>this<sp/>is<sp/>_technically_<sp/>an<sp/>error,<sp/>we<sp/>don&apos;t<sp/>want<sp/>people<sp/>to<sp/>fail<sp/>because<sp/>of<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>){</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(5);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curname<sp/>==<sp/><ref refid="types_8h_13d7d1b6b25e26030cf09f680a1aa0e81" kindref="member">A</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(7);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="parser___u_n_i_8cpp_1932a8223df97b0a70a82aeb1a96ca46c" kindref="member" tooltip="Creates a pseudorandom object name. Used for parsing malformed input.">createrandomname</ref>(curname);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b6bf72aed403690c9db7eb159268ad21" kindref="member" tooltip="This function looks for, and skips over any whitespace or comments under the input...">skipWS</ref>();</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>){</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(5);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(6);<sp/></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">){<sp/><sp/></highlight><highlight class="comment">//this<sp/>should<sp/>allow<sp/>recovery<sp/>in<sp/>some<sp/>situations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b6bf72aed403690c9db7eb159268ad21" kindref="member" tooltip="This function looks for, and skips over any whitespace or comments under the input...">skipWS</ref>();</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>){</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(5);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d46ff8757c23da4275dce8db69a135b7" kindref="member" tooltip="Works out the type of, and then reads a value from the input stream into rv.">getvalue</ref>(curval);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv.<ref refid="class_j_s_o_n_1_1value_1cc4898d3cee6c1e81e491bd7aacc5c3e" kindref="member" tooltip="Adds a copy of newval to the end of the JSON array.">addvalue</ref>(curname.c_str(),curval);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">JSON::value</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d46ff8757c23da4275dce8db69a135b7" kindref="member" tooltip="Works out the type of, and then reads a value from the input stream into rv.">parser_UTF8::getvalue</ref>(<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">JSON::value</ref><sp/>&amp;rv){</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv.<ref refid="class_j_s_o_n_1_1value_18d312e9a28a7a3f931f71bec837f1ad7" kindref="member" tooltip="Deletes the existing value, and sets the value to a new type, as specified by nv...">setdt</ref>(<ref refid="namespace_j_s_o_n_1_1datatype_1a838cd3fc48fd79e1a9d2a4a6c8dbcbf33017e4e430d6ac1697395a14f6d3551" kindref="member">datatype::_undefined</ref>);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b6bf72aed403690c9db7eb159268ad21" kindref="member" tooltip="This function looks for, and skips over any whitespace or comments under the input...">skipWS</ref>();</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>&gt;=<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_11dbc03e51e1b50b4da50d71b8432128c" kindref="member">end</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_11009581ac1ad90256bcfd618275becaf" kindref="member">astr</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_18f26f14d15b59838efb1c75380006513" kindref="member" tooltip="Reads a string from the input buffer and parses the esape chars. rv is set to the...">readstring</ref>(tmp);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv.<ref refid="class_j_s_o_n_1_1value_13a9e44d9a1b41d63e77cdf961a4dc664" kindref="member" tooltip="Sets this value to an empty string.">setstring</ref>(tmp);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_17f390bac9b1df96640acfb3ced3f608f" kindref="member" tooltip="Reads an array from the input stream into rv.">readarray</ref>(rv);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1327b5ededdd7095bc7bfb05d6d99bdf1" kindref="member" tooltip="Reads an object from the input stream into rv.">readobject</ref>(rv);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_147c6ac30926aa72be75be6f60e9757f3" kindref="member" tooltip="Reads a JSON Literal from the input buffer and sets rv to it&amp;#39;s value.">readlit</ref>(rv);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>||(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(*<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_1f8cd98a412d71d3dffe5bb7f13307da4" kindref="member">ptr</ref><sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_116d5e391f6d4bb04fd4812ebe9a280fe" kindref="member" tooltip="Reads an ECMAScript conformant number from the input buffer.">readnum</ref>(rv);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">parser_UTF8::adderror</ref><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num){</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_12f6a518bd6ecd49ed7e675b5f78fc877" kindref="member">errs</ref>.push_back(num);</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_18c6baca6a0f18163fa3d36e9b39c8003" kindref="member" tooltip="Property getter for the errorcount.">parser_UTF8::errorcount</ref>(){</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_12f6a518bd6ecd49ed7e675b5f78fc877" kindref="member">errs</ref>.size();</highlight></codeline>
<codeline lineno="793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1a7fe13e71520efe7478188af6f836d1f" kindref="member" tooltip="Has error e been raised yet? for the list of errors, see: parser_errors.cpp.">parser_UTF8::fail</ref>(){</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_j_s_o_n_1_1parser___u_t_f8_12f6a518bd6ecd49ed7e675b5f78fc877" kindref="member">errs</ref>.size()==0);</highlight></codeline>
<codeline lineno="800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_15de60ef31696acaa8128341b0a1a21f4" kindref="member" tooltip="clear the error list.">parser_UTF8::reseterrors</ref>(){</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_12f6a518bd6ecd49ed7e675b5f78fc877" kindref="member">errs</ref>.clear();</highlight></codeline>
<codeline lineno="808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_14e04b3d9a01020fbb6f65d50fe076763" kindref="member">parser_UTF8::geterrors</ref>(){</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_12f6a518bd6ecd49ed7e675b5f78fc877" kindref="member">errs</ref>;</highlight></codeline>
<codeline lineno="813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1e0d86c88983afae5bdfa4558cc0d02af" kindref="member" tooltip="Did parsing generate any errors? Unfortunately, there is no way to gague the severity...">parser_UTF8::haveerror</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e){</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;::iterator<sp/>i;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=<ref refid="class_j_s_o_n_1_1parser___u_t_f8_12f6a518bd6ecd49ed7e675b5f78fc877" kindref="member">errs</ref>.begin();i!=<ref refid="class_j_s_o_n_1_1parser___u_t_f8_12f6a518bd6ecd49ed7e675b5f78fc877" kindref="member">errs</ref>.end();++i){</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e<sp/>==<sp/>*i)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8h_1bc73ed3eebb94ad6e4b3a4f84fc6f882" kindref="member">achar</ref>*<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1f56b637e6feed65915e10e8e9a9aaf3d" kindref="member" tooltip="translates an error number into its description">parser_UTF8::geterrorstring</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_j_s_o_n_1_1errors_1ce729d1647e5a3467dde445656ee5616" kindref="member" tooltip="an array of error descriptions JSON::errors::errors[10] is the description for error...">JSON::errors::errors</ref>[i];</highlight></codeline>
<codeline lineno="833"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>parse()<sp/>functiosn</highlight></codeline>
<codeline lineno="837"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">JSON::value</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1f26ebd86e49b9e8c5b3d4fba16001679" kindref="member" tooltip="parses a value from the input stream into rv. the input buffer must already have...">parser_UTF8::parse</ref>(<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">JSON::value</ref><sp/>&amp;rv){</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d46ff8757c23da4275dce8db69a135b7" kindref="member" tooltip="Works out the type of, and then reads a value from the input stream into rv.">getvalue</ref>(rv);</highlight></codeline>
<codeline lineno="844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">JSON::value</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1f26ebd86e49b9e8c5b3d4fba16001679" kindref="member" tooltip="parses a value from the input stream into rv. the input buffer must already have...">parser_UTF8::parse</ref>(<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">JSON::value</ref><sp/>&amp;rv,std::string<sp/>s){</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_104f86b32071c7ee2ef4174d3d3228307" kindref="member" tooltip="sets up the buffer to read from the string buf. The buffer reads buf directly, so...">mapstring</ref>(s.c_str())){</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(10);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d46ff8757c23da4275dce8db69a135b7" kindref="member" tooltip="Works out the type of, and then reads a value from the input stream into rv.">getvalue</ref>(rv);</highlight></codeline>
<codeline lineno="857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">JSON::value</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1f26ebd86e49b9e8c5b3d4fba16001679" kindref="member" tooltip="parses a value from the input stream into rv. the input buffer must already have...">parser_UTF8::parse</ref>(<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">JSON::value</ref><sp/>&amp;rv,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s){</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_104f86b32071c7ee2ef4174d3d3228307" kindref="member" tooltip="sets up the buffer to read from the string buf. The buffer reads buf directly, so...">mapstring</ref>(s)){</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(10);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d46ff8757c23da4275dce8db69a135b7" kindref="member" tooltip="Works out the type of, and then reads a value from the input stream into rv.">getvalue</ref>(rv);</highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">JSON::value</ref><sp/>&amp;<ref refid="class_j_s_o_n_1_1parser___u_t_f8_15aac5bfafdcd0796bb9f2e6e859ca4b7" kindref="member" tooltip="maps the file s into memory, then parses it into rv ">parser_UTF8::parsefile</ref>(<ref refid="class_j_s_o_n_1_1value" kindref="compound" tooltip="This class represents any JSON value. A value can have any of the basic JSON datatypes...">JSON::value</ref><sp/>&amp;rv,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s){</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_14b24e4a3768de21c47f9195f135d089e" kindref="member">mapfile</ref>(s)){</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(9);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d46ff8757c23da4275dce8db69a135b7" kindref="member" tooltip="Works out the type of, and then reads a value from the input stream into rv.">getvalue</ref>(rv);</highlight></codeline>
<codeline lineno="880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight></codeline>
<codeline lineno="883"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>Parser<sp/>Constructors</highlight></codeline>
<codeline lineno="885"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1524ae6d6fb2b696893e487796a6c0f1d" kindref="member">parser_UTF8::parser_UTF8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>s){</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_104f86b32071c7ee2ef4174d3d3228307" kindref="member" tooltip="sets up the buffer to read from the string buf. The buffer reads buf directly, so...">mapstring</ref>(s.c_str()))<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(10);</highlight></codeline>
<codeline lineno="891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1524ae6d6fb2b696893e487796a6c0f1d" kindref="member">parser_UTF8::parser_UTF8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s){</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_j_s_o_n_1_1parser___u_t_f8_1b55fb139082b5de4bc93398e752b3cbd" kindref="member">bfr</ref>.<ref refid="class_j_s_o_n_1_1utf8buffer_104f86b32071c7ee2ef4174d3d3228307" kindref="member" tooltip="sets up the buffer to read from the string buf. The buffer reads buf directly, so...">mapstring</ref>(s))<sp/><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1d1d46b64bbe46ccd4a91cb9b4daa98cf" kindref="member" tooltip="Simple wrapper function for adding error information. this may include line/col information...">adderror</ref>(10);</highlight></codeline>
<codeline lineno="897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><ref refid="class_j_s_o_n_1_1parser___u_t_f8_1524ae6d6fb2b696893e487796a6c0f1d" kindref="member">parser_UTF8::parser_UTF8</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="900"><highlight class="normal">{</highlight></codeline>
<codeline lineno="901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><ref refid="class_j_s_o_n_1_1parser___u_t_f8_18fb6b4521e944c35c1fb231b3da3dd5a" kindref="member">parser_UTF8::~parser_UTF8</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="904"><highlight class="normal">{</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight></codeline>
    </programlisting>
    <location file="k:/Visual Studio 2008/Projects/libJSONpp/libJSONpp/parser_UTF8.cpp"/>
  </compounddef>
</doxygen>
